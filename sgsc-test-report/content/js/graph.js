/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "maxY": 3555.0, "series": [{"data": [[0.0, 6.0], [0.1, 7.0], [0.2, 10.0], [0.3, 10.0], [0.4, 18.0], [0.5, 31.0], [0.6, 133.0], [0.7, 152.0], [0.8, 180.0], [0.9, 187.0], [1.0, 192.0], [1.1, 192.0], [1.2, 202.0], [1.3, 202.0], [1.4, 213.0], [1.5, 216.0], [1.6, 217.0], [1.7, 217.0], [1.8, 227.0], [1.9, 228.0], [2.0, 233.0], [2.1, 239.0], [2.2, 253.0], [2.3, 256.0], [2.4, 262.0], [2.5, 265.0], [2.6, 267.0], [2.7, 273.0], [2.8, 275.0], [2.9, 276.0], [3.0, 276.0], [3.1, 277.0], [3.2, 280.0], [3.3, 281.0], [3.4, 281.0], [3.5, 283.0], [3.6, 283.0], [3.7, 283.0], [3.8, 284.0], [3.9, 285.0], [4.0, 292.0], [4.1, 292.0], [4.2, 306.0], [4.3, 322.0], [4.4, 327.0], [4.5, 336.0], [4.6, 346.0], [4.7, 347.0], [4.8, 348.0], [4.9, 349.0], [5.0, 349.0], [5.1, 350.0], [5.2, 369.0], [5.3, 378.0], [5.4, 380.0], [5.5, 412.0], [5.6, 413.0], [5.7, 414.0], [5.8, 416.0], [5.9, 422.0], [6.0, 429.0], [6.1, 433.0], [6.2, 438.0], [6.3, 443.0], [6.4, 443.0], [6.5, 445.0], [6.6, 447.0], [6.7, 449.0], [6.8, 449.0], [6.9, 449.0], [7.0, 451.0], [7.1, 454.0], [7.2, 454.0], [7.3, 454.0], [7.4, 455.0], [7.5, 455.0], [7.6, 458.0], [7.7, 460.0], [7.8, 463.0], [7.9, 466.0], [8.0, 475.0], [8.1, 477.0], [8.2, 477.0], [8.3, 480.0], [8.4, 481.0], [8.5, 484.0], [8.6, 485.0], [8.7, 498.0], [8.8, 503.0], [8.9, 509.0], [9.0, 520.0], [9.1, 533.0], [9.2, 573.0], [9.3, 585.0], [9.4, 598.0], [9.5, 613.0], [9.6, 618.0], [9.7, 619.0], [9.8, 619.0], [9.9, 633.0], [10.0, 639.0], [10.1, 641.0], [10.2, 647.0], [10.3, 650.0], [10.4, 659.0], [10.5, 662.0], [10.6, 663.0], [10.7, 664.0], [10.8, 664.0], [10.9, 667.0], [11.0, 668.0], [11.1, 671.0], [11.2, 675.0], [11.3, 676.0], [11.4, 676.0], [11.5, 690.0], [11.6, 699.0], [11.7, 702.0], [11.8, 713.0], [11.9, 714.0], [12.0, 726.0], [12.1, 748.0], [12.2, 751.0], [12.3, 754.0], [12.4, 756.0], [12.5, 773.0], [12.6, 774.0], [12.7, 777.0], [12.8, 787.0], [12.9, 787.0], [13.0, 803.0], [13.1, 808.0], [13.2, 838.0], [13.3, 854.0], [13.4, 860.0], [13.5, 876.0], [13.6, 879.0], [13.7, 881.0], [13.8, 885.0], [13.9, 886.0], [14.0, 894.0], [14.1, 900.0], [14.2, 900.0], [14.3, 911.0], [14.4, 940.0], [14.5, 961.0], [14.6, 981.0], [14.7, 985.0], [14.8, 985.0], [14.9, 994.0], [15.0, 1019.0], [15.1, 1020.0], [15.2, 1029.0], [15.3, 1033.0], [15.4, 1034.0], [15.5, 1041.0], [15.6, 1049.0], [15.7, 1062.0], [15.8, 1065.0], [15.9, 1067.0], [16.0, 1072.0], [16.1, 1077.0], [16.2, 1081.0], [16.3, 1103.0], [16.4, 1107.0], [16.5, 1117.0], [16.6, 1119.0], [16.7, 1129.0], [16.8, 1131.0], [16.9, 1132.0], [17.0, 1134.0], [17.1, 1135.0], [17.2, 1135.0], [17.3, 1137.0], [17.4, 1138.0], [17.5, 1138.0], [17.6, 1138.0], [17.7, 1138.0], [17.8, 1139.0], [17.9, 1139.0], [18.0, 1139.0], [18.1, 1140.0], [18.2, 1141.0], [18.3, 1141.0], [18.4, 1143.0], [18.5, 1144.0], [18.6, 1145.0], [18.7, 1146.0], [18.8, 1149.0], [18.9, 1153.0], [19.0, 1155.0], [19.1, 1157.0], [19.2, 1169.0], [19.3, 1175.0], [19.4, 1191.0], [19.5, 1196.0], [19.6, 1201.0], [19.7, 1202.0], [19.8, 1203.0], [19.9, 1203.0], [20.0, 1207.0], [20.1, 1212.0], [20.2, 1212.0], [20.3, 1214.0], [20.4, 1215.0], [20.5, 1217.0], [20.6, 1218.0], [20.7, 1222.0], [20.8, 1222.0], [20.9, 1223.0], [21.0, 1224.0], [21.1, 1225.0], [21.2, 1232.0], [21.3, 1234.0], [21.4, 1243.0], [21.5, 1243.0], [21.6, 1245.0], [21.7, 1247.0], [21.8, 1248.0], [21.9, 1250.0], [22.0, 1252.0], [22.1, 1256.0], [22.2, 1257.0], [22.3, 1259.0], [22.4, 1259.0], [22.5, 1259.0], [22.6, 1260.0], [22.7, 1260.0], [22.8, 1261.0], [22.9, 1261.0], [23.0, 1261.0], [23.1, 1261.0], [23.2, 1262.0], [23.3, 1262.0], [23.4, 1262.0], [23.5, 1263.0], [23.6, 1263.0], [23.7, 1263.0], [23.8, 1263.0], [23.9, 1263.0], [24.0, 1263.0], [24.1, 1264.0], [24.2, 1264.0], [24.3, 1265.0], [24.4, 1265.0], [24.5, 1265.0], [24.6, 1266.0], [24.7, 1267.0], [24.8, 1267.0], [24.9, 1267.0], [25.0, 1268.0], [25.1, 1268.0], [25.2, 1268.0], [25.3, 1268.0], [25.4, 1269.0], [25.5, 1269.0], [25.6, 1269.0], [25.7, 1269.0], [25.8, 1270.0], [25.9, 1270.0], [26.0, 1270.0], [26.1, 1270.0], [26.2, 1271.0], [26.3, 1271.0], [26.4, 1271.0], [26.5, 1272.0], [26.6, 1272.0], [26.7, 1273.0], [26.8, 1273.0], [26.9, 1273.0], [27.0, 1273.0], [27.1, 1273.0], [27.2, 1273.0], [27.3, 1273.0], [27.4, 1274.0], [27.5, 1274.0], [27.6, 1274.0], [27.7, 1275.0], [27.8, 1275.0], [27.9, 1275.0], [28.0, 1275.0], [28.1, 1276.0], [28.2, 1276.0], [28.3, 1278.0], [28.4, 1279.0], [28.5, 1282.0], [28.6, 1283.0], [28.7, 1283.0], [28.8, 1286.0], [28.9, 1288.0], [29.0, 1291.0], [29.1, 1293.0], [29.2, 1293.0], [29.3, 1296.0], [29.4, 1299.0], [29.5, 1301.0], [29.6, 1302.0], [29.7, 1304.0], [29.8, 1307.0], [29.9, 1308.0], [30.0, 1308.0], [30.1, 1309.0], [30.2, 1315.0], [30.3, 1317.0], [30.4, 1318.0], [30.5, 1319.0], [30.6, 1320.0], [30.7, 1321.0], [30.8, 1323.0], [30.9, 1348.0], [31.0, 1348.0], [31.1, 1349.0], [31.2, 1352.0], [31.3, 1352.0], [31.4, 1352.0], [31.5, 1352.0], [31.6, 1353.0], [31.7, 1355.0], [31.8, 1356.0], [31.9, 1357.0], [32.0, 1358.0], [32.1, 1358.0], [32.2, 1358.0], [32.3, 1359.0], [32.4, 1359.0], [32.5, 1359.0], [32.6, 1359.0], [32.7, 1359.0], [32.8, 1360.0], [32.9, 1363.0], [33.0, 1364.0], [33.1, 1364.0], [33.2, 1365.0], [33.3, 1365.0], [33.4, 1365.0], [33.5, 1366.0], [33.6, 1366.0], [33.7, 1367.0], [33.8, 1367.0], [33.9, 1369.0], [34.0, 1370.0], [34.1, 1373.0], [34.2, 1374.0], [34.3, 1374.0], [34.4, 1375.0], [34.5, 1376.0], [34.6, 1376.0], [34.7, 1376.0], [34.8, 1376.0], [34.9, 1377.0], [35.0, 1377.0], [35.1, 1377.0], [35.2, 1377.0], [35.3, 1378.0], [35.4, 1378.0], [35.5, 1379.0], [35.6, 1380.0], [35.7, 1380.0], [35.8, 1381.0], [35.9, 1381.0], [36.0, 1381.0], [36.1, 1382.0], [36.2, 1382.0], [36.3, 1382.0], [36.4, 1382.0], [36.5, 1382.0], [36.6, 1382.0], [36.7, 1383.0], [36.8, 1383.0], [36.9, 1383.0], [37.0, 1384.0], [37.1, 1385.0], [37.2, 1385.0], [37.3, 1385.0], [37.4, 1386.0], [37.5, 1386.0], [37.6, 1386.0], [37.7, 1386.0], [37.8, 1386.0], [37.9, 1387.0], [38.0, 1387.0], [38.1, 1387.0], [38.2, 1387.0], [38.3, 1387.0], [38.4, 1387.0], [38.5, 1389.0], [38.6, 1389.0], [38.7, 1391.0], [38.8, 1391.0], [38.9, 1391.0], [39.0, 1391.0], [39.1, 1392.0], [39.2, 1392.0], [39.3, 1392.0], [39.4, 1392.0], [39.5, 1392.0], [39.6, 1392.0], [39.7, 1393.0], [39.8, 1393.0], [39.9, 1393.0], [40.0, 1394.0], [40.1, 1394.0], [40.2, 1395.0], [40.3, 1395.0], [40.4, 1395.0], [40.5, 1395.0], [40.6, 1395.0], [40.7, 1395.0], [40.8, 1396.0], [40.9, 1396.0], [41.0, 1396.0], [41.1, 1397.0], [41.2, 1398.0], [41.3, 1398.0], [41.4, 1398.0], [41.5, 1398.0], [41.6, 1398.0], [41.7, 1398.0], [41.8, 1399.0], [41.9, 1399.0], [42.0, 1399.0], [42.1, 1399.0], [42.2, 1400.0], [42.3, 1401.0], [42.4, 1401.0], [42.5, 1402.0], [42.6, 1402.0], [42.7, 1402.0], [42.8, 1402.0], [42.9, 1403.0], [43.0, 1403.0], [43.1, 1403.0], [43.2, 1403.0], [43.3, 1404.0], [43.4, 1406.0], [43.5, 1408.0], [43.6, 1409.0], [43.7, 1409.0], [43.8, 1410.0], [43.9, 1412.0], [44.0, 1414.0], [44.1, 1414.0], [44.2, 1414.0], [44.3, 1415.0], [44.4, 1416.0], [44.5, 1417.0], [44.6, 1419.0], [44.7, 1421.0], [44.8, 1421.0], [44.9, 1421.0], [45.0, 1423.0], [45.1, 1424.0], [45.2, 1424.0], [45.3, 1424.0], [45.4, 1424.0], [45.5, 1425.0], [45.6, 1428.0], [45.7, 1428.0], [45.8, 1430.0], [45.9, 1430.0], [46.0, 1431.0], [46.1, 1432.0], [46.2, 1432.0], [46.3, 1433.0], [46.4, 1433.0], [46.5, 1434.0], [46.6, 1434.0], [46.7, 1435.0], [46.8, 1435.0], [46.9, 1435.0], [47.0, 1436.0], [47.1, 1437.0], [47.2, 1437.0], [47.3, 1438.0], [47.4, 1438.0], [47.5, 1439.0], [47.6, 1440.0], [47.7, 1440.0], [47.8, 1441.0], [47.9, 1441.0], [48.0, 1441.0], [48.1, 1441.0], [48.2, 1442.0], [48.3, 1443.0], [48.4, 1443.0], [48.5, 1443.0], [48.6, 1444.0], [48.7, 1444.0], [48.8, 1446.0], [48.9, 1449.0], [49.0, 1450.0], [49.1, 1451.0], [49.2, 1451.0], [49.3, 1453.0], [49.4, 1457.0], [49.5, 1459.0], [49.6, 1461.0], [49.7, 1464.0], [49.8, 1471.0], [49.9, 1474.0], [50.0, 1475.0], [50.1, 1475.0], [50.2, 1475.0], [50.3, 1479.0], [50.4, 1481.0], [50.5, 1481.0], [50.6, 1481.0], [50.7, 1482.0], [50.8, 1484.0], [50.9, 1487.0], [51.0, 1489.0], [51.1, 1490.0], [51.2, 1492.0], [51.3, 1492.0], [51.4, 1493.0], [51.5, 1493.0], [51.6, 1493.0], [51.7, 1494.0], [51.8, 1494.0], [51.9, 1495.0], [52.0, 1495.0], [52.1, 1495.0], [52.2, 1495.0], [52.3, 1496.0], [52.4, 1497.0], [52.5, 1497.0], [52.6, 1498.0], [52.7, 1498.0], [52.8, 1499.0], [52.9, 1499.0], [53.0, 1499.0], [53.1, 1500.0], [53.2, 1501.0], [53.3, 1501.0], [53.4, 1501.0], [53.5, 1501.0], [53.6, 1501.0], [53.7, 1502.0], [53.8, 1502.0], [53.9, 1503.0], [54.0, 1503.0], [54.1, 1504.0], [54.2, 1504.0], [54.3, 1505.0], [54.4, 1506.0], [54.5, 1507.0], [54.6, 1507.0], [54.7, 1508.0], [54.8, 1508.0], [54.9, 1509.0], [55.0, 1510.0], [55.1, 1511.0], [55.2, 1511.0], [55.3, 1512.0], [55.4, 1512.0], [55.5, 1512.0], [55.6, 1513.0], [55.7, 1513.0], [55.8, 1513.0], [55.9, 1513.0], [56.0, 1513.0], [56.1, 1514.0], [56.2, 1514.0], [56.3, 1515.0], [56.4, 1521.0], [56.5, 1521.0], [56.6, 1523.0], [56.7, 1523.0], [56.8, 1524.0], [56.9, 1526.0], [57.0, 1526.0], [57.1, 1526.0], [57.2, 1526.0], [57.3, 1526.0], [57.4, 1526.0], [57.5, 1526.0], [57.6, 1527.0], [57.7, 1527.0], [57.8, 1527.0], [57.9, 1528.0], [58.0, 1529.0], [58.1, 1529.0], [58.2, 1531.0], [58.3, 1531.0], [58.4, 1532.0], [58.5, 1532.0], [58.6, 1532.0], [58.7, 1533.0], [58.8, 1533.0], [58.9, 1533.0], [59.0, 1533.0], [59.1, 1534.0], [59.2, 1536.0], [59.3, 1536.0], [59.4, 1536.0], [59.5, 1537.0], [59.6, 1537.0], [59.7, 1538.0], [59.8, 1538.0], [59.9, 1538.0], [60.0, 1539.0], [60.1, 1539.0], [60.2, 1539.0], [60.3, 1540.0], [60.4, 1541.0], [60.5, 1541.0], [60.6, 1541.0], [60.7, 1541.0], [60.8, 1541.0], [60.9, 1541.0], [61.0, 1541.0], [61.1, 1541.0], [61.2, 1543.0], [61.3, 1543.0], [61.4, 1543.0], [61.5, 1543.0], [61.6, 1544.0], [61.7, 1544.0], [61.8, 1545.0], [61.9, 1545.0], [62.0, 1546.0], [62.1, 1546.0], [62.2, 1547.0], [62.3, 1548.0], [62.4, 1548.0], [62.5, 1548.0], [62.6, 1549.0], [62.7, 1549.0], [62.8, 1549.0], [62.9, 1550.0], [63.0, 1551.0], [63.1, 1552.0], [63.2, 1552.0], [63.3, 1552.0], [63.4, 1552.0], [63.5, 1553.0], [63.6, 1553.0], [63.7, 1553.0], [63.8, 1555.0], [63.9, 1555.0], [64.0, 1556.0], [64.1, 1557.0], [64.2, 1558.0], [64.3, 1560.0], [64.4, 1561.0], [64.5, 1561.0], [64.6, 1561.0], [64.7, 1563.0], [64.8, 1563.0], [64.9, 1563.0], [65.0, 1564.0], [65.1, 1564.0], [65.2, 1564.0], [65.3, 1565.0], [65.4, 1567.0], [65.5, 1567.0], [65.6, 1568.0], [65.7, 1573.0], [65.8, 1574.0], [65.9, 1575.0], [66.0, 1579.0], [66.1, 1580.0], [66.2, 1580.0], [66.3, 1590.0], [66.4, 1597.0], [66.5, 1602.0], [66.6, 1603.0], [66.7, 1612.0], [66.8, 1613.0], [66.9, 1616.0], [67.0, 1616.0], [67.1, 1616.0], [67.2, 1617.0], [67.3, 1619.0], [67.4, 1619.0], [67.5, 1620.0], [67.6, 1622.0], [67.7, 1622.0], [67.8, 1622.0], [67.9, 1623.0], [68.0, 1623.0], [68.1, 1623.0], [68.2, 1624.0], [68.3, 1624.0], [68.4, 1625.0], [68.5, 1625.0], [68.6, 1625.0], [68.7, 1625.0], [68.8, 1625.0], [68.9, 1625.0], [69.0, 1626.0], [69.1, 1627.0], [69.2, 1628.0], [69.3, 1628.0], [69.4, 1628.0], [69.5, 1628.0], [69.6, 1628.0], [69.7, 1629.0], [69.8, 1630.0], [69.9, 1630.0], [70.0, 1630.0], [70.1, 1631.0], [70.2, 1631.0], [70.3, 1632.0], [70.4, 1632.0], [70.5, 1633.0], [70.6, 1634.0], [70.7, 1634.0], [70.8, 1635.0], [70.9, 1637.0], [71.0, 1637.0], [71.1, 1639.0], [71.2, 1639.0], [71.3, 1640.0], [71.4, 1641.0], [71.5, 1642.0], [71.6, 1644.0], [71.7, 1647.0], [71.8, 1648.0], [71.9, 1653.0], [72.0, 1656.0], [72.1, 1657.0], [72.2, 1659.0], [72.3, 1659.0], [72.4, 1660.0], [72.5, 1661.0], [72.6, 1664.0], [72.7, 1664.0], [72.8, 1666.0], [72.9, 1666.0], [73.0, 1667.0], [73.1, 1668.0], [73.2, 1668.0], [73.3, 1668.0], [73.4, 1669.0], [73.5, 1670.0], [73.6, 1673.0], [73.7, 1673.0], [73.8, 1673.0], [73.9, 1675.0], [74.0, 1675.0], [74.1, 1675.0], [74.2, 1675.0], [74.3, 1676.0], [74.4, 1677.0], [74.5, 1677.0], [74.6, 1677.0], [74.7, 1679.0], [74.8, 1679.0], [74.9, 1679.0], [75.0, 1679.0], [75.1, 1681.0], [75.2, 1681.0], [75.3, 1682.0], [75.4, 1682.0], [75.5, 1683.0], [75.6, 1684.0], [75.7, 1688.0], [75.8, 1690.0], [75.9, 1690.0], [76.0, 1694.0], [76.1, 1698.0], [76.2, 1699.0], [76.3, 1701.0], [76.4, 1701.0], [76.5, 1701.0], [76.6, 1702.0], [76.7, 1704.0], [76.8, 1705.0], [76.9, 1706.0], [77.0, 1707.0], [77.1, 1710.0], [77.2, 1710.0], [77.3, 1711.0], [77.4, 1715.0], [77.5, 1715.0], [77.6, 1716.0], [77.7, 1716.0], [77.8, 1717.0], [77.9, 1720.0], [78.0, 1721.0], [78.1, 1721.0], [78.2, 1723.0], [78.3, 1723.0], [78.4, 1724.0], [78.5, 1725.0], [78.6, 1727.0], [78.7, 1729.0], [78.8, 1729.0], [78.9, 1729.0], [79.0, 1730.0], [79.1, 1730.0], [79.2, 1732.0], [79.3, 1732.0], [79.4, 1737.0], [79.5, 1737.0], [79.6, 1738.0], [79.7, 1739.0], [79.8, 1740.0], [79.9, 1741.0], [80.0, 1742.0], [80.1, 1744.0], [80.2, 1744.0], [80.3, 1746.0], [80.4, 1746.0], [80.5, 1746.0], [80.6, 1747.0], [80.7, 1752.0], [80.8, 1755.0], [80.9, 1755.0], [81.0, 1756.0], [81.1, 1758.0], [81.2, 1758.0], [81.3, 1758.0], [81.4, 1759.0], [81.5, 1760.0], [81.6, 1761.0], [81.7, 1761.0], [81.8, 1761.0], [81.9, 1763.0], [82.0, 1764.0], [82.1, 1764.0], [82.2, 1764.0], [82.3, 1765.0], [82.4, 1766.0], [82.5, 1767.0], [82.6, 1768.0], [82.7, 1768.0], [82.8, 1769.0], [82.9, 1771.0], [83.0, 1772.0], [83.1, 1772.0], [83.2, 1773.0], [83.3, 1773.0], [83.4, 1774.0], [83.5, 1774.0], [83.6, 1780.0], [83.7, 1780.0], [83.8, 1780.0], [83.9, 1783.0], [84.0, 1783.0], [84.1, 1785.0], [84.2, 1786.0], [84.3, 1787.0], [84.4, 1787.0], [84.5, 1788.0], [84.6, 1789.0], [84.7, 1792.0], [84.8, 1794.0], [84.9, 1794.0], [85.0, 1796.0], [85.1, 1797.0], [85.2, 1798.0], [85.3, 1799.0], [85.4, 1799.0], [85.5, 1800.0], [85.6, 1800.0], [85.7, 1801.0], [85.8, 1802.0], [85.9, 1805.0], [86.0, 1807.0], [86.1, 1809.0], [86.2, 1812.0], [86.3, 1814.0], [86.4, 1814.0], [86.5, 1815.0], [86.6, 1817.0], [86.7, 1817.0], [86.8, 1817.0], [86.9, 1821.0], [87.0, 1825.0], [87.1, 1836.0], [87.2, 1836.0], [87.3, 1839.0], [87.4, 1840.0], [87.5, 1845.0], [87.6, 1846.0], [87.7, 1848.0], [87.8, 1851.0], [87.9, 1851.0], [88.0, 1853.0], [88.1, 1853.0], [88.2, 1855.0], [88.3, 1855.0], [88.4, 1855.0], [88.5, 1856.0], [88.6, 1857.0], [88.7, 1857.0], [88.8, 1857.0], [88.9, 1859.0], [89.0, 1861.0], [89.1, 1861.0], [89.2, 1863.0], [89.3, 1865.0], [89.4, 1867.0], [89.5, 1868.0], [89.6, 1871.0], [89.7, 1873.0], [89.8, 1873.0], [89.9, 1876.0], [90.0, 1877.0], [90.1, 1882.0], [90.2, 1886.0], [90.3, 1890.0], [90.4, 1891.0], [90.5, 1892.0], [90.6, 1897.0], [90.7, 1902.0], [90.8, 1904.0], [90.9, 1908.0], [91.0, 1908.0], [91.1, 1914.0], [91.2, 1916.0], [91.3, 1917.0], [91.4, 1917.0], [91.5, 1917.0], [91.6, 1918.0], [91.7, 1920.0], [91.8, 1921.0], [91.9, 1921.0], [92.0, 1921.0], [92.1, 1923.0], [92.2, 1924.0], [92.3, 1925.0], [92.4, 1932.0], [92.5, 1941.0], [92.6, 1946.0], [92.7, 1948.0], [92.8, 1948.0], [92.9, 1949.0], [93.0, 1955.0], [93.1, 1955.0], [93.2, 1956.0], [93.3, 1956.0], [93.4, 1956.0], [93.5, 1956.0], [93.6, 1961.0], [93.7, 1963.0], [93.8, 1976.0], [93.9, 1977.0], [94.0, 1977.0], [94.1, 1978.0], [94.2, 1985.0], [94.3, 1985.0], [94.4, 1999.0], [94.5, 1999.0], [94.6, 2000.0], [94.7, 2000.0], [94.8, 2003.0], [94.9, 2010.0], [95.0, 2010.0], [95.1, 2013.0], [95.2, 2014.0], [95.3, 2016.0], [95.4, 2017.0], [95.5, 2018.0], [95.6, 2018.0], [95.7, 2025.0], [95.8, 2025.0], [95.9, 2031.0], [96.0, 2034.0], [96.1, 2045.0], [96.2, 2052.0], [96.3, 2075.0], [96.4, 2078.0], [96.5, 2079.0], [96.6, 2088.0], [96.7, 2089.0], [96.8, 2097.0], [96.9, 2106.0], [97.0, 2110.0], [97.1, 2114.0], [97.2, 2131.0], [97.3, 2143.0], [97.4, 2147.0], [97.5, 2149.0], [97.6, 2154.0], [97.7, 2155.0], [97.8, 2160.0], [97.9, 2163.0], [98.0, 2172.0], [98.1, 2173.0], [98.2, 2176.0], [98.3, 2201.0], [98.4, 2205.0], [98.5, 2232.0], [98.6, 2255.0], [98.7, 2277.0], [98.8, 2281.0], [98.9, 2283.0], [99.0, 2296.0], [99.1, 2305.0], [99.2, 2344.0], [99.3, 2354.0], [99.4, 2367.0], [99.5, 2390.0], [99.6, 2519.0], [99.7, 2621.0], [99.8, 2707.0], [99.9, 2797.0]], "isOverall": false, "label": "HTTP 요청 (사용자 조회)", "isController": false}, {"data": [[0.0, 502.0], [0.1, 535.0], [0.2, 546.0], [0.3, 546.0], [0.4, 557.0], [0.5, 559.0], [0.6, 560.0], [0.7, 564.0], [0.8, 565.0], [0.9, 567.0], [1.0, 568.0], [1.1, 568.0], [1.2, 573.0], [1.3, 578.0], [1.4, 578.0], [1.5, 581.0], [1.6, 592.0], [1.7, 592.0], [1.8, 594.0], [1.9, 598.0], [2.0, 599.0], [2.1, 600.0], [2.2, 603.0], [2.3, 606.0], [2.4, 609.0], [2.5, 609.0], [2.6, 611.0], [2.7, 612.0], [2.8, 613.0], [2.9, 613.0], [3.0, 618.0], [3.1, 620.0], [3.2, 621.0], [3.3, 621.0], [3.4, 627.0], [3.5, 631.0], [3.6, 631.0], [3.7, 634.0], [3.8, 639.0], [3.9, 640.0], [4.0, 646.0], [4.1, 647.0], [4.2, 650.0], [4.3, 653.0], [4.4, 655.0], [4.5, 655.0], [4.6, 655.0], [4.7, 658.0], [4.8, 658.0], [4.9, 661.0], [5.0, 664.0], [5.1, 673.0], [5.2, 679.0], [5.3, 681.0], [5.4, 685.0], [5.5, 688.0], [5.6, 688.0], [5.7, 689.0], [5.8, 689.0], [5.9, 692.0], [6.0, 692.0], [6.1, 695.0], [6.2, 702.0], [6.3, 703.0], [6.4, 703.0], [6.5, 704.0], [6.6, 704.0], [6.7, 708.0], [6.8, 709.0], [6.9, 709.0], [7.0, 712.0], [7.1, 714.0], [7.2, 714.0], [7.3, 717.0], [7.4, 717.0], [7.5, 720.0], [7.6, 722.0], [7.7, 725.0], [7.8, 725.0], [7.9, 726.0], [8.0, 726.0], [8.1, 727.0], [8.2, 733.0], [8.3, 736.0], [8.4, 737.0], [8.5, 741.0], [8.6, 741.0], [8.7, 748.0], [8.8, 749.0], [8.9, 751.0], [9.0, 752.0], [9.1, 757.0], [9.2, 758.0], [9.3, 761.0], [9.4, 765.0], [9.5, 770.0], [9.6, 783.0], [9.7, 789.0], [9.8, 800.0], [9.9, 800.0], [10.0, 805.0], [10.1, 815.0], [10.2, 818.0], [10.3, 819.0], [10.4, 823.0], [10.5, 824.0], [10.6, 826.0], [10.7, 830.0], [10.8, 834.0], [10.9, 837.0], [11.0, 837.0], [11.1, 840.0], [11.2, 842.0], [11.3, 845.0], [11.4, 849.0], [11.5, 850.0], [11.6, 853.0], [11.7, 855.0], [11.8, 858.0], [11.9, 861.0], [12.0, 865.0], [12.1, 865.0], [12.2, 868.0], [12.3, 869.0], [12.4, 870.0], [12.5, 872.0], [12.6, 875.0], [12.7, 875.0], [12.8, 879.0], [12.9, 881.0], [13.0, 883.0], [13.1, 886.0], [13.2, 889.0], [13.3, 891.0], [13.4, 893.0], [13.5, 894.0], [13.6, 894.0], [13.7, 894.0], [13.8, 896.0], [13.9, 897.0], [14.0, 898.0], [14.1, 898.0], [14.2, 900.0], [14.3, 901.0], [14.4, 904.0], [14.5, 906.0], [14.6, 908.0], [14.7, 911.0], [14.8, 915.0], [14.9, 915.0], [15.0, 916.0], [15.1, 917.0], [15.2, 917.0], [15.3, 918.0], [15.4, 919.0], [15.5, 919.0], [15.6, 920.0], [15.7, 924.0], [15.8, 924.0], [15.9, 927.0], [16.0, 935.0], [16.1, 937.0], [16.2, 938.0], [16.3, 942.0], [16.4, 942.0], [16.5, 942.0], [16.6, 943.0], [16.7, 945.0], [16.8, 945.0], [16.9, 947.0], [17.0, 949.0], [17.1, 949.0], [17.2, 949.0], [17.3, 952.0], [17.4, 954.0], [17.5, 955.0], [17.6, 955.0], [17.7, 956.0], [17.8, 956.0], [17.9, 956.0], [18.0, 960.0], [18.1, 960.0], [18.2, 963.0], [18.3, 966.0], [18.4, 966.0], [18.5, 967.0], [18.6, 968.0], [18.7, 968.0], [18.8, 970.0], [18.9, 971.0], [19.0, 972.0], [19.1, 973.0], [19.2, 973.0], [19.3, 975.0], [19.4, 976.0], [19.5, 976.0], [19.6, 976.0], [19.7, 979.0], [19.8, 979.0], [19.9, 980.0], [20.0, 980.0], [20.1, 981.0], [20.2, 981.0], [20.3, 981.0], [20.4, 982.0], [20.5, 983.0], [20.6, 984.0], [20.7, 984.0], [20.8, 986.0], [20.9, 986.0], [21.0, 986.0], [21.1, 987.0], [21.2, 987.0], [21.3, 989.0], [21.4, 989.0], [21.5, 990.0], [21.6, 990.0], [21.7, 990.0], [21.8, 990.0], [21.9, 991.0], [22.0, 991.0], [22.1, 991.0], [22.2, 991.0], [22.3, 991.0], [22.4, 991.0], [22.5, 992.0], [22.6, 993.0], [22.7, 994.0], [22.8, 995.0], [22.9, 995.0], [23.0, 996.0], [23.1, 997.0], [23.2, 997.0], [23.3, 998.0], [23.4, 999.0], [23.5, 999.0], [23.6, 1001.0], [23.7, 1001.0], [23.8, 1003.0], [23.9, 1003.0], [24.0, 1004.0], [24.1, 1007.0], [24.2, 1007.0], [24.3, 1008.0], [24.4, 1009.0], [24.5, 1009.0], [24.6, 1011.0], [24.7, 1012.0], [24.8, 1013.0], [24.9, 1014.0], [25.0, 1015.0], [25.1, 1015.0], [25.2, 1015.0], [25.3, 1016.0], [25.4, 1016.0], [25.5, 1016.0], [25.6, 1017.0], [25.7, 1017.0], [25.8, 1017.0], [25.9, 1017.0], [26.0, 1019.0], [26.1, 1021.0], [26.2, 1021.0], [26.3, 1022.0], [26.4, 1022.0], [26.5, 1025.0], [26.6, 1026.0], [26.7, 1026.0], [26.8, 1027.0], [26.9, 1029.0], [27.0, 1030.0], [27.1, 1031.0], [27.2, 1031.0], [27.3, 1031.0], [27.4, 1032.0], [27.5, 1033.0], [27.6, 1034.0], [27.7, 1034.0], [27.8, 1034.0], [27.9, 1034.0], [28.0, 1034.0], [28.1, 1035.0], [28.2, 1036.0], [28.3, 1039.0], [28.4, 1040.0], [28.5, 1042.0], [28.6, 1044.0], [28.7, 1045.0], [28.8, 1046.0], [28.9, 1047.0], [29.0, 1047.0], [29.1, 1049.0], [29.2, 1051.0], [29.3, 1053.0], [29.4, 1055.0], [29.5, 1058.0], [29.6, 1060.0], [29.7, 1060.0], [29.8, 1070.0], [29.9, 1074.0], [30.0, 1074.0], [30.1, 1074.0], [30.2, 1076.0], [30.3, 1077.0], [30.4, 1088.0], [30.5, 1102.0], [30.6, 1111.0], [30.7, 1115.0], [30.8, 1115.0], [30.9, 1116.0], [31.0, 1122.0], [31.1, 1125.0], [31.2, 1128.0], [31.3, 1138.0], [31.4, 1156.0], [31.5, 1169.0], [31.6, 1170.0], [31.7, 1170.0], [31.8, 1174.0], [31.9, 1176.0], [32.0, 1185.0], [32.1, 1190.0], [32.2, 1192.0], [32.3, 1212.0], [32.4, 1216.0], [32.5, 1216.0], [32.6, 1218.0], [32.7, 1222.0], [32.8, 1227.0], [32.9, 1229.0], [33.0, 1232.0], [33.1, 1233.0], [33.2, 1237.0], [33.3, 1239.0], [33.4, 1239.0], [33.5, 1241.0], [33.6, 1242.0], [33.7, 1242.0], [33.8, 1242.0], [33.9, 1242.0], [34.0, 1242.0], [34.1, 1247.0], [34.2, 1249.0], [34.3, 1250.0], [34.4, 1250.0], [34.5, 1253.0], [34.6, 1253.0], [34.7, 1254.0], [34.8, 1256.0], [34.9, 1256.0], [35.0, 1257.0], [35.1, 1258.0], [35.2, 1259.0], [35.3, 1259.0], [35.4, 1259.0], [35.5, 1260.0], [35.6, 1261.0], [35.7, 1261.0], [35.8, 1264.0], [35.9, 1264.0], [36.0, 1266.0], [36.1, 1267.0], [36.2, 1267.0], [36.3, 1267.0], [36.4, 1272.0], [36.5, 1272.0], [36.6, 1272.0], [36.7, 1272.0], [36.8, 1272.0], [36.9, 1277.0], [37.0, 1277.0], [37.1, 1283.0], [37.2, 1288.0], [37.3, 1290.0], [37.4, 1290.0], [37.5, 1290.0], [37.6, 1291.0], [37.7, 1292.0], [37.8, 1292.0], [37.9, 1293.0], [38.0, 1293.0], [38.1, 1293.0], [38.2, 1296.0], [38.3, 1296.0], [38.4, 1296.0], [38.5, 1297.0], [38.6, 1297.0], [38.7, 1298.0], [38.8, 1298.0], [38.9, 1298.0], [39.0, 1299.0], [39.1, 1299.0], [39.2, 1299.0], [39.3, 1300.0], [39.4, 1300.0], [39.5, 1301.0], [39.6, 1301.0], [39.7, 1303.0], [39.8, 1304.0], [39.9, 1305.0], [40.0, 1305.0], [40.1, 1306.0], [40.2, 1306.0], [40.3, 1306.0], [40.4, 1307.0], [40.5, 1307.0], [40.6, 1308.0], [40.7, 1310.0], [40.8, 1313.0], [40.9, 1314.0], [41.0, 1315.0], [41.1, 1317.0], [41.2, 1318.0], [41.3, 1319.0], [41.4, 1319.0], [41.5, 1320.0], [41.6, 1320.0], [41.7, 1322.0], [41.8, 1325.0], [41.9, 1325.0], [42.0, 1325.0], [42.1, 1328.0], [42.2, 1329.0], [42.3, 1329.0], [42.4, 1330.0], [42.5, 1332.0], [42.6, 1332.0], [42.7, 1333.0], [42.8, 1333.0], [42.9, 1333.0], [43.0, 1334.0], [43.1, 1335.0], [43.2, 1335.0], [43.3, 1335.0], [43.4, 1336.0], [43.5, 1336.0], [43.6, 1336.0], [43.7, 1338.0], [43.8, 1338.0], [43.9, 1338.0], [44.0, 1339.0], [44.1, 1340.0], [44.2, 1341.0], [44.3, 1342.0], [44.4, 1342.0], [44.5, 1342.0], [44.6, 1343.0], [44.7, 1348.0], [44.8, 1351.0], [44.9, 1352.0], [45.0, 1353.0], [45.1, 1358.0], [45.2, 1358.0], [45.3, 1360.0], [45.4, 1365.0], [45.5, 1374.0], [45.6, 1375.0], [45.7, 1379.0], [45.8, 1379.0], [45.9, 1380.0], [46.0, 1381.0], [46.1, 1382.0], [46.2, 1382.0], [46.3, 1384.0], [46.4, 1384.0], [46.5, 1386.0], [46.6, 1389.0], [46.7, 1391.0], [46.8, 1392.0], [46.9, 1392.0], [47.0, 1392.0], [47.1, 1392.0], [47.2, 1392.0], [47.3, 1394.0], [47.4, 1395.0], [47.5, 1396.0], [47.6, 1397.0], [47.7, 1398.0], [47.8, 1400.0], [47.9, 1402.0], [48.0, 1402.0], [48.1, 1402.0], [48.2, 1402.0], [48.3, 1403.0], [48.4, 1403.0], [48.5, 1403.0], [48.6, 1407.0], [48.7, 1407.0], [48.8, 1407.0], [48.9, 1408.0], [49.0, 1409.0], [49.1, 1409.0], [49.2, 1409.0], [49.3, 1410.0], [49.4, 1411.0], [49.5, 1412.0], [49.6, 1413.0], [49.7, 1414.0], [49.8, 1414.0], [49.9, 1414.0], [50.0, 1414.0], [50.1, 1415.0], [50.2, 1418.0], [50.3, 1419.0], [50.4, 1419.0], [50.5, 1426.0], [50.6, 1427.0], [50.7, 1429.0], [50.8, 1429.0], [50.9, 1431.0], [51.0, 1431.0], [51.1, 1432.0], [51.2, 1433.0], [51.3, 1434.0], [51.4, 1437.0], [51.5, 1440.0], [51.6, 1441.0], [51.7, 1444.0], [51.8, 1450.0], [51.9, 1451.0], [52.0, 1451.0], [52.1, 1454.0], [52.2, 1455.0], [52.3, 1455.0], [52.4, 1457.0], [52.5, 1457.0], [52.6, 1457.0], [52.7, 1457.0], [52.8, 1459.0], [52.9, 1460.0], [53.0, 1461.0], [53.1, 1461.0], [53.2, 1462.0], [53.3, 1462.0], [53.4, 1462.0], [53.5, 1462.0], [53.6, 1463.0], [53.7, 1463.0], [53.8, 1464.0], [53.9, 1465.0], [54.0, 1465.0], [54.1, 1465.0], [54.2, 1465.0], [54.3, 1465.0], [54.4, 1465.0], [54.5, 1466.0], [54.6, 1466.0], [54.7, 1466.0], [54.8, 1467.0], [54.9, 1467.0], [55.0, 1467.0], [55.1, 1467.0], [55.2, 1468.0], [55.3, 1469.0], [55.4, 1469.0], [55.5, 1469.0], [55.6, 1469.0], [55.7, 1469.0], [55.8, 1470.0], [55.9, 1470.0], [56.0, 1470.0], [56.1, 1471.0], [56.2, 1471.0], [56.3, 1471.0], [56.4, 1471.0], [56.5, 1472.0], [56.6, 1472.0], [56.7, 1472.0], [56.8, 1473.0], [56.9, 1473.0], [57.0, 1473.0], [57.1, 1473.0], [57.2, 1473.0], [57.3, 1474.0], [57.4, 1474.0], [57.5, 1474.0], [57.6, 1475.0], [57.7, 1475.0], [57.8, 1475.0], [57.9, 1475.0], [58.0, 1475.0], [58.1, 1475.0], [58.2, 1476.0], [58.3, 1476.0], [58.4, 1476.0], [58.5, 1476.0], [58.6, 1477.0], [58.7, 1477.0], [58.8, 1477.0], [58.9, 1477.0], [59.0, 1478.0], [59.1, 1478.0], [59.2, 1479.0], [59.3, 1480.0], [59.4, 1481.0], [59.5, 1481.0], [59.6, 1482.0], [59.7, 1484.0], [59.8, 1484.0], [59.9, 1485.0], [60.0, 1485.0], [60.1, 1486.0], [60.2, 1488.0], [60.3, 1488.0], [60.4, 1488.0], [60.5, 1488.0], [60.6, 1489.0], [60.7, 1489.0], [60.8, 1491.0], [60.9, 1491.0], [61.0, 1491.0], [61.1, 1492.0], [61.2, 1492.0], [61.3, 1492.0], [61.4, 1493.0], [61.5, 1493.0], [61.6, 1494.0], [61.7, 1494.0], [61.8, 1495.0], [61.9, 1495.0], [62.0, 1496.0], [62.1, 1496.0], [62.2, 1496.0], [62.3, 1496.0], [62.4, 1497.0], [62.5, 1497.0], [62.6, 1498.0], [62.7, 1498.0], [62.8, 1500.0], [62.9, 1500.0], [63.0, 1501.0], [63.1, 1502.0], [63.2, 1503.0], [63.3, 1503.0], [63.4, 1504.0], [63.5, 1509.0], [63.6, 1510.0], [63.7, 1511.0], [63.8, 1511.0], [63.9, 1514.0], [64.0, 1520.0], [64.1, 1521.0], [64.2, 1522.0], [64.3, 1526.0], [64.4, 1532.0], [64.5, 1543.0], [64.6, 1543.0], [64.7, 1543.0], [64.8, 1547.0], [64.9, 1552.0], [65.0, 1553.0], [65.1, 1554.0], [65.2, 1556.0], [65.3, 1559.0], [65.4, 1561.0], [65.5, 1563.0], [65.6, 1564.0], [65.7, 1564.0], [65.8, 1564.0], [65.9, 1564.0], [66.0, 1565.0], [66.1, 1565.0], [66.2, 1565.0], [66.3, 1566.0], [66.4, 1566.0], [66.5, 1567.0], [66.6, 1567.0], [66.7, 1569.0], [66.8, 1569.0], [66.9, 1569.0], [67.0, 1570.0], [67.1, 1570.0], [67.2, 1570.0], [67.3, 1572.0], [67.4, 1573.0], [67.5, 1573.0], [67.6, 1574.0], [67.7, 1575.0], [67.8, 1575.0], [67.9, 1575.0], [68.0, 1577.0], [68.1, 1578.0], [68.2, 1583.0], [68.3, 1583.0], [68.4, 1584.0], [68.5, 1586.0], [68.6, 1588.0], [68.7, 1589.0], [68.8, 1589.0], [68.9, 1590.0], [69.0, 1590.0], [69.1, 1590.0], [69.2, 1590.0], [69.3, 1590.0], [69.4, 1591.0], [69.5, 1591.0], [69.6, 1592.0], [69.7, 1592.0], [69.8, 1592.0], [69.9, 1593.0], [70.0, 1593.0], [70.1, 1595.0], [70.2, 1595.0], [70.3, 1596.0], [70.4, 1596.0], [70.5, 1597.0], [70.6, 1598.0], [70.7, 1599.0], [70.8, 1600.0], [70.9, 1600.0], [71.0, 1600.0], [71.1, 1601.0], [71.2, 1601.0], [71.3, 1601.0], [71.4, 1602.0], [71.5, 1603.0], [71.6, 1604.0], [71.7, 1605.0], [71.8, 1605.0], [71.9, 1605.0], [72.0, 1606.0], [72.1, 1607.0], [72.2, 1608.0], [72.3, 1609.0], [72.4, 1610.0], [72.5, 1611.0], [72.6, 1613.0], [72.7, 1613.0], [72.8, 1615.0], [72.9, 1615.0], [73.0, 1616.0], [73.1, 1617.0], [73.2, 1620.0], [73.3, 1621.0], [73.4, 1627.0], [73.5, 1628.0], [73.6, 1630.0], [73.7, 1630.0], [73.8, 1632.0], [73.9, 1634.0], [74.0, 1634.0], [74.1, 1635.0], [74.2, 1638.0], [74.3, 1643.0], [74.4, 1646.0], [74.5, 1646.0], [74.6, 1647.0], [74.7, 1647.0], [74.8, 1650.0], [74.9, 1652.0], [75.0, 1652.0], [75.1, 1656.0], [75.2, 1657.0], [75.3, 1657.0], [75.4, 1660.0], [75.5, 1661.0], [75.6, 1661.0], [75.7, 1666.0], [75.8, 1666.0], [75.9, 1667.0], [76.0, 1667.0], [76.1, 1669.0], [76.2, 1670.0], [76.3, 1672.0], [76.4, 1674.0], [76.5, 1674.0], [76.6, 1675.0], [76.7, 1676.0], [76.8, 1678.0], [76.9, 1678.0], [77.0, 1679.0], [77.1, 1681.0], [77.2, 1681.0], [77.3, 1681.0], [77.4, 1682.0], [77.5, 1684.0], [77.6, 1684.0], [77.7, 1687.0], [77.8, 1688.0], [77.9, 1690.0], [78.0, 1691.0], [78.1, 1692.0], [78.2, 1693.0], [78.3, 1693.0], [78.4, 1694.0], [78.5, 1695.0], [78.6, 1697.0], [78.7, 1698.0], [78.8, 1698.0], [78.9, 1698.0], [79.0, 1698.0], [79.1, 1698.0], [79.2, 1702.0], [79.3, 1702.0], [79.4, 1703.0], [79.5, 1705.0], [79.6, 1706.0], [79.7, 1707.0], [79.8, 1707.0], [79.9, 1708.0], [80.0, 1709.0], [80.1, 1711.0], [80.2, 1713.0], [80.3, 1714.0], [80.4, 1717.0], [80.5, 1719.0], [80.6, 1719.0], [80.7, 1719.0], [80.8, 1720.0], [80.9, 1720.0], [81.0, 1721.0], [81.1, 1721.0], [81.2, 1721.0], [81.3, 1721.0], [81.4, 1721.0], [81.5, 1722.0], [81.6, 1722.0], [81.7, 1723.0], [81.8, 1724.0], [81.9, 1724.0], [82.0, 1725.0], [82.1, 1725.0], [82.2, 1725.0], [82.3, 1726.0], [82.4, 1727.0], [82.5, 1729.0], [82.6, 1729.0], [82.7, 1729.0], [82.8, 1729.0], [82.9, 1730.0], [83.0, 1730.0], [83.1, 1733.0], [83.2, 1733.0], [83.3, 1734.0], [83.4, 1734.0], [83.5, 1735.0], [83.6, 1735.0], [83.7, 1736.0], [83.8, 1737.0], [83.9, 1737.0], [84.0, 1737.0], [84.1, 1738.0], [84.2, 1739.0], [84.3, 1739.0], [84.4, 1741.0], [84.5, 1743.0], [84.6, 1743.0], [84.7, 1744.0], [84.8, 1745.0], [84.9, 1745.0], [85.0, 1745.0], [85.1, 1746.0], [85.2, 1747.0], [85.3, 1748.0], [85.4, 1749.0], [85.5, 1749.0], [85.6, 1749.0], [85.7, 1749.0], [85.8, 1751.0], [85.9, 1751.0], [86.0, 1751.0], [86.1, 1751.0], [86.2, 1751.0], [86.3, 1751.0], [86.4, 1751.0], [86.5, 1753.0], [86.6, 1754.0], [86.7, 1754.0], [86.8, 1755.0], [86.9, 1755.0], [87.0, 1755.0], [87.1, 1756.0], [87.2, 1756.0], [87.3, 1757.0], [87.4, 1758.0], [87.5, 1758.0], [87.6, 1758.0], [87.7, 1759.0], [87.8, 1759.0], [87.9, 1759.0], [88.0, 1760.0], [88.1, 1761.0], [88.2, 1762.0], [88.3, 1763.0], [88.4, 1764.0], [88.5, 1764.0], [88.6, 1764.0], [88.7, 1764.0], [88.8, 1764.0], [88.9, 1765.0], [89.0, 1765.0], [89.1, 1765.0], [89.2, 1765.0], [89.3, 1766.0], [89.4, 1766.0], [89.5, 1767.0], [89.6, 1767.0], [89.7, 1768.0], [89.8, 1768.0], [89.9, 1769.0], [90.0, 1769.0], [90.1, 1769.0], [90.2, 1769.0], [90.3, 1770.0], [90.4, 1770.0], [90.5, 1770.0], [90.6, 1770.0], [90.7, 1771.0], [90.8, 1771.0], [90.9, 1771.0], [91.0, 1771.0], [91.1, 1771.0], [91.2, 1771.0], [91.3, 1771.0], [91.4, 1771.0], [91.5, 1772.0], [91.6, 1772.0], [91.7, 1773.0], [91.8, 1773.0], [91.9, 1773.0], [92.0, 1773.0], [92.1, 1773.0], [92.2, 1773.0], [92.3, 1774.0], [92.4, 1774.0], [92.5, 1774.0], [92.6, 1774.0], [92.7, 1774.0], [92.8, 1775.0], [92.9, 1776.0], [93.0, 1776.0], [93.1, 1776.0], [93.2, 1778.0], [93.3, 1778.0], [93.4, 1778.0], [93.5, 1778.0], [93.6, 1782.0], [93.7, 1783.0], [93.8, 1785.0], [93.9, 1786.0], [94.0, 1787.0], [94.1, 1798.0], [94.2, 1808.0], [94.3, 1823.0], [94.4, 1829.0], [94.5, 1848.0], [94.6, 1848.0], [94.7, 1851.0], [94.8, 1851.0], [94.9, 1860.0], [95.0, 1867.0], [95.1, 1868.0], [95.2, 1869.0], [95.3, 1876.0], [95.4, 1899.0], [95.5, 1899.0], [95.6, 1900.0], [95.7, 1902.0], [95.8, 1902.0], [95.9, 1903.0], [96.0, 1907.0], [96.1, 1907.0], [96.2, 1908.0], [96.3, 1908.0], [96.4, 1909.0], [96.5, 1909.0], [96.6, 1910.0], [96.7, 1911.0], [96.8, 1916.0], [96.9, 1917.0], [97.0, 1920.0], [97.1, 1920.0], [97.2, 1922.0], [97.3, 1922.0], [97.4, 1932.0], [97.5, 1943.0], [97.6, 1945.0], [97.7, 1950.0], [97.8, 1964.0], [97.9, 1995.0], [98.0, 2016.0], [98.1, 2020.0], [98.2, 2022.0], [98.3, 2033.0], [98.4, 2033.0], [98.5, 2036.0], [98.6, 2037.0], [98.7, 2037.0], [98.8, 2039.0], [98.9, 2041.0], [99.0, 2041.0], [99.1, 2041.0], [99.2, 2042.0], [99.3, 2044.0], [99.4, 2061.0], [99.5, 2144.0], [99.6, 2208.0], [99.7, 2238.0], [99.8, 2281.0], [99.9, 2374.0]], "isOverall": false, "label": "HTTP 요청 (사용자 로그인)", "isController": false}, {"data": [[0.0, 181.0], [0.1, 185.0], [0.2, 265.0], [0.3, 265.0], [0.4, 301.0], [0.5, 302.0], [0.6, 308.0], [0.7, 309.0], [0.8, 312.0], [0.9, 313.0], [1.0, 336.0], [1.1, 341.0], [1.2, 350.0], [1.3, 354.0], [1.4, 354.0], [1.5, 357.0], [1.6, 358.0], [1.7, 358.0], [1.8, 412.0], [1.9, 428.0], [2.0, 457.0], [2.1, 459.0], [2.2, 460.0], [2.3, 462.0], [2.4, 465.0], [2.5, 476.0], [2.6, 477.0], [2.7, 478.0], [2.8, 478.0], [2.9, 480.0], [3.0, 505.0], [3.1, 510.0], [3.2, 581.0], [3.3, 603.0], [3.4, 633.0], [3.5, 639.0], [3.6, 726.0], [3.7, 739.0], [3.8, 743.0], [3.9, 826.0], [4.0, 850.0], [4.1, 853.0], [4.2, 1114.0], [4.3, 1117.0], [4.4, 1145.0], [4.5, 1150.0], [4.6, 1151.0], [4.7, 1153.0], [4.8, 1156.0], [4.9, 1160.0], [5.0, 1162.0], [5.1, 1168.0], [5.2, 1173.0], [5.3, 1173.0], [5.4, 1180.0], [5.5, 1181.0], [5.6, 1187.0], [5.7, 1188.0], [5.8, 1191.0], [5.9, 1199.0], [6.0, 1206.0], [6.1, 1208.0], [6.2, 1221.0], [6.3, 1223.0], [6.4, 1234.0], [6.5, 1246.0], [6.6, 1246.0], [6.7, 1251.0], [6.8, 1251.0], [6.9, 1255.0], [7.0, 1261.0], [7.1, 1263.0], [7.2, 1263.0], [7.3, 1265.0], [7.4, 1267.0], [7.5, 1268.0], [7.6, 1270.0], [7.7, 1271.0], [7.8, 1272.0], [7.9, 1272.0], [8.0, 1272.0], [8.1, 1273.0], [8.2, 1273.0], [8.3, 1274.0], [8.4, 1274.0], [8.5, 1275.0], [8.6, 1275.0], [8.7, 1275.0], [8.8, 1275.0], [8.9, 1276.0], [9.0, 1278.0], [9.1, 1280.0], [9.2, 1280.0], [9.3, 1281.0], [9.4, 1282.0], [9.5, 1283.0], [9.6, 1283.0], [9.7, 1284.0], [9.8, 1285.0], [9.9, 1285.0], [10.0, 1286.0], [10.1, 1288.0], [10.2, 1291.0], [10.3, 1291.0], [10.4, 1291.0], [10.5, 1296.0], [10.6, 1297.0], [10.7, 1297.0], [10.8, 1299.0], [10.9, 1299.0], [11.0, 1300.0], [11.1, 1300.0], [11.2, 1301.0], [11.3, 1302.0], [11.4, 1302.0], [11.5, 1302.0], [11.6, 1303.0], [11.7, 1303.0], [11.8, 1304.0], [11.9, 1304.0], [12.0, 1304.0], [12.1, 1305.0], [12.2, 1305.0], [12.3, 1306.0], [12.4, 1307.0], [12.5, 1307.0], [12.6, 1307.0], [12.7, 1307.0], [12.8, 1307.0], [12.9, 1308.0], [13.0, 1308.0], [13.1, 1309.0], [13.2, 1311.0], [13.3, 1313.0], [13.4, 1313.0], [13.5, 1313.0], [13.6, 1314.0], [13.7, 1315.0], [13.8, 1315.0], [13.9, 1318.0], [14.0, 1324.0], [14.1, 1325.0], [14.2, 1327.0], [14.3, 1327.0], [14.4, 1328.0], [14.5, 1329.0], [14.6, 1329.0], [14.7, 1330.0], [14.8, 1332.0], [14.9, 1332.0], [15.0, 1333.0], [15.1, 1335.0], [15.2, 1335.0], [15.3, 1336.0], [15.4, 1337.0], [15.5, 1341.0], [15.6, 1341.0], [15.7, 1344.0], [15.8, 1348.0], [15.9, 1351.0], [16.0, 1351.0], [16.1, 1352.0], [16.2, 1355.0], [16.3, 1357.0], [16.4, 1359.0], [16.5, 1360.0], [16.6, 1361.0], [16.7, 1362.0], [16.8, 1363.0], [16.9, 1366.0], [17.0, 1368.0], [17.1, 1371.0], [17.2, 1372.0], [17.3, 1372.0], [17.4, 1372.0], [17.5, 1376.0], [17.6, 1376.0], [17.7, 1377.0], [17.8, 1378.0], [17.9, 1378.0], [18.0, 1381.0], [18.1, 1381.0], [18.2, 1384.0], [18.3, 1386.0], [18.4, 1387.0], [18.5, 1389.0], [18.6, 1391.0], [18.7, 1393.0], [18.8, 1394.0], [18.9, 1394.0], [19.0, 1395.0], [19.1, 1395.0], [19.2, 1396.0], [19.3, 1396.0], [19.4, 1397.0], [19.5, 1398.0], [19.6, 1398.0], [19.7, 1399.0], [19.8, 1400.0], [19.9, 1400.0], [20.0, 1401.0], [20.1, 1403.0], [20.2, 1403.0], [20.3, 1404.0], [20.4, 1404.0], [20.5, 1404.0], [20.6, 1405.0], [20.7, 1406.0], [20.8, 1406.0], [20.9, 1407.0], [21.0, 1407.0], [21.1, 1407.0], [21.2, 1408.0], [21.3, 1410.0], [21.4, 1415.0], [21.5, 1417.0], [21.6, 1419.0], [21.7, 1420.0], [21.8, 1424.0], [21.9, 1429.0], [22.0, 1429.0], [22.1, 1434.0], [22.2, 1442.0], [22.3, 1443.0], [22.4, 1443.0], [22.5, 1445.0], [22.6, 1445.0], [22.7, 1445.0], [22.8, 1445.0], [22.9, 1446.0], [23.0, 1448.0], [23.1, 1448.0], [23.2, 1448.0], [23.3, 1449.0], [23.4, 1452.0], [23.5, 1453.0], [23.6, 1454.0], [23.7, 1455.0], [23.8, 1456.0], [23.9, 1456.0], [24.0, 1457.0], [24.1, 1458.0], [24.2, 1459.0], [24.3, 1460.0], [24.4, 1463.0], [24.5, 1463.0], [24.6, 1464.0], [24.7, 1466.0], [24.8, 1466.0], [24.9, 1468.0], [25.0, 1468.0], [25.1, 1468.0], [25.2, 1469.0], [25.3, 1469.0], [25.4, 1469.0], [25.5, 1469.0], [25.6, 1470.0], [25.7, 1471.0], [25.8, 1472.0], [25.9, 1473.0], [26.0, 1473.0], [26.1, 1474.0], [26.2, 1474.0], [26.3, 1476.0], [26.4, 1479.0], [26.5, 1481.0], [26.6, 1482.0], [26.7, 1482.0], [26.8, 1482.0], [26.9, 1483.0], [27.0, 1485.0], [27.1, 1485.0], [27.2, 1486.0], [27.3, 1489.0], [27.4, 1489.0], [27.5, 1491.0], [27.6, 1495.0], [27.7, 1495.0], [27.8, 1498.0], [27.9, 1499.0], [28.0, 1499.0], [28.1, 1501.0], [28.2, 1502.0], [28.3, 1503.0], [28.4, 1503.0], [28.5, 1504.0], [28.6, 1506.0], [28.7, 1506.0], [28.8, 1506.0], [28.9, 1506.0], [29.0, 1507.0], [29.1, 1507.0], [29.2, 1508.0], [29.3, 1508.0], [29.4, 1509.0], [29.5, 1509.0], [29.6, 1509.0], [29.7, 1513.0], [29.8, 1513.0], [29.9, 1514.0], [30.0, 1514.0], [30.1, 1514.0], [30.2, 1515.0], [30.3, 1516.0], [30.4, 1516.0], [30.5, 1516.0], [30.6, 1517.0], [30.7, 1519.0], [30.8, 1521.0], [30.9, 1521.0], [31.0, 1523.0], [31.1, 1523.0], [31.2, 1526.0], [31.3, 1528.0], [31.4, 1528.0], [31.5, 1529.0], [31.6, 1530.0], [31.7, 1530.0], [31.8, 1530.0], [31.9, 1531.0], [32.0, 1531.0], [32.1, 1532.0], [32.2, 1534.0], [32.3, 1535.0], [32.4, 1537.0], [32.5, 1539.0], [32.6, 1540.0], [32.7, 1543.0], [32.8, 1545.0], [32.9, 1545.0], [33.0, 1547.0], [33.1, 1547.0], [33.2, 1552.0], [33.3, 1552.0], [33.4, 1553.0], [33.5, 1553.0], [33.6, 1554.0], [33.7, 1555.0], [33.8, 1556.0], [33.9, 1556.0], [34.0, 1557.0], [34.1, 1558.0], [34.2, 1559.0], [34.3, 1562.0], [34.4, 1562.0], [34.5, 1563.0], [34.6, 1563.0], [34.7, 1563.0], [34.8, 1564.0], [34.9, 1564.0], [35.0, 1565.0], [35.1, 1566.0], [35.2, 1567.0], [35.3, 1568.0], [35.4, 1569.0], [35.5, 1572.0], [35.6, 1577.0], [35.7, 1578.0], [35.8, 1579.0], [35.9, 1580.0], [36.0, 1582.0], [36.1, 1583.0], [36.2, 1584.0], [36.3, 1585.0], [36.4, 1587.0], [36.5, 1587.0], [36.6, 1591.0], [36.7, 1597.0], [36.8, 1600.0], [36.9, 1604.0], [37.0, 1607.0], [37.1, 1607.0], [37.2, 1609.0], [37.3, 1610.0], [37.4, 1611.0], [37.5, 1611.0], [37.6, 1611.0], [37.7, 1612.0], [37.8, 1613.0], [37.9, 1614.0], [38.0, 1618.0], [38.1, 1621.0], [38.2, 1622.0], [38.3, 1623.0], [38.4, 1624.0], [38.5, 1625.0], [38.6, 1627.0], [38.7, 1632.0], [38.8, 1633.0], [38.9, 1634.0], [39.0, 1637.0], [39.1, 1640.0], [39.2, 1641.0], [39.3, 1642.0], [39.4, 1642.0], [39.5, 1645.0], [39.6, 1645.0], [39.7, 1647.0], [39.8, 1649.0], [39.9, 1650.0], [40.0, 1652.0], [40.1, 1655.0], [40.2, 1655.0], [40.3, 1655.0], [40.4, 1657.0], [40.5, 1658.0], [40.6, 1658.0], [40.7, 1659.0], [40.8, 1660.0], [40.9, 1661.0], [41.0, 1664.0], [41.1, 1665.0], [41.2, 1665.0], [41.3, 1666.0], [41.4, 1667.0], [41.5, 1667.0], [41.6, 1668.0], [41.7, 1668.0], [41.8, 1668.0], [41.9, 1668.0], [42.0, 1669.0], [42.1, 1669.0], [42.2, 1670.0], [42.3, 1671.0], [42.4, 1671.0], [42.5, 1671.0], [42.6, 1671.0], [42.7, 1672.0], [42.8, 1673.0], [42.9, 1674.0], [43.0, 1674.0], [43.1, 1675.0], [43.2, 1675.0], [43.3, 1675.0], [43.4, 1675.0], [43.5, 1678.0], [43.6, 1680.0], [43.7, 1680.0], [43.8, 1681.0], [43.9, 1685.0], [44.0, 1685.0], [44.1, 1685.0], [44.2, 1686.0], [44.3, 1688.0], [44.4, 1689.0], [44.5, 1689.0], [44.6, 1690.0], [44.7, 1691.0], [44.8, 1692.0], [44.9, 1693.0], [45.0, 1694.0], [45.1, 1696.0], [45.2, 1697.0], [45.3, 1697.0], [45.4, 1697.0], [45.5, 1698.0], [45.6, 1698.0], [45.7, 1698.0], [45.8, 1699.0], [45.9, 1700.0], [46.0, 1700.0], [46.1, 1701.0], [46.2, 1704.0], [46.3, 1705.0], [46.4, 1706.0], [46.5, 1707.0], [46.6, 1709.0], [46.7, 1711.0], [46.8, 1711.0], [46.9, 1713.0], [47.0, 1713.0], [47.1, 1715.0], [47.2, 1717.0], [47.3, 1719.0], [47.4, 1721.0], [47.5, 1721.0], [47.6, 1722.0], [47.7, 1724.0], [47.8, 1725.0], [47.9, 1725.0], [48.0, 1725.0], [48.1, 1726.0], [48.2, 1726.0], [48.3, 1727.0], [48.4, 1730.0], [48.5, 1731.0], [48.6, 1732.0], [48.7, 1732.0], [48.8, 1734.0], [48.9, 1734.0], [49.0, 1738.0], [49.1, 1738.0], [49.2, 1738.0], [49.3, 1738.0], [49.4, 1739.0], [49.5, 1739.0], [49.6, 1740.0], [49.7, 1741.0], [49.8, 1742.0], [49.9, 1742.0], [50.0, 1742.0], [50.1, 1742.0], [50.2, 1743.0], [50.3, 1743.0], [50.4, 1746.0], [50.5, 1748.0], [50.6, 1750.0], [50.7, 1750.0], [50.8, 1755.0], [50.9, 1755.0], [51.0, 1756.0], [51.1, 1757.0], [51.2, 1757.0], [51.3, 1758.0], [51.4, 1759.0], [51.5, 1760.0], [51.6, 1761.0], [51.7, 1761.0], [51.8, 1762.0], [51.9, 1764.0], [52.0, 1764.0], [52.1, 1764.0], [52.2, 1765.0], [52.3, 1765.0], [52.4, 1765.0], [52.5, 1767.0], [52.6, 1767.0], [52.7, 1767.0], [52.8, 1768.0], [52.9, 1770.0], [53.0, 1770.0], [53.1, 1772.0], [53.2, 1772.0], [53.3, 1773.0], [53.4, 1773.0], [53.5, 1774.0], [53.6, 1774.0], [53.7, 1776.0], [53.8, 1781.0], [53.9, 1781.0], [54.0, 1783.0], [54.1, 1783.0], [54.2, 1783.0], [54.3, 1784.0], [54.4, 1785.0], [54.5, 1785.0], [54.6, 1786.0], [54.7, 1786.0], [54.8, 1790.0], [54.9, 1791.0], [55.0, 1791.0], [55.1, 1800.0], [55.2, 1807.0], [55.3, 1809.0], [55.4, 1811.0], [55.5, 1812.0], [55.6, 1813.0], [55.7, 1814.0], [55.8, 1814.0], [55.9, 1815.0], [56.0, 1815.0], [56.1, 1816.0], [56.2, 1819.0], [56.3, 1819.0], [56.4, 1823.0], [56.5, 1824.0], [56.6, 1830.0], [56.7, 1832.0], [56.8, 1833.0], [56.9, 1835.0], [57.0, 1836.0], [57.1, 1842.0], [57.2, 1846.0], [57.3, 1846.0], [57.4, 1848.0], [57.5, 1850.0], [57.6, 1852.0], [57.7, 1853.0], [57.8, 1854.0], [57.9, 1854.0], [58.0, 1855.0], [58.1, 1857.0], [58.2, 1858.0], [58.3, 1858.0], [58.4, 1858.0], [58.5, 1859.0], [58.6, 1859.0], [58.7, 1860.0], [58.8, 1862.0], [58.9, 1864.0], [59.0, 1864.0], [59.1, 1864.0], [59.2, 1864.0], [59.3, 1866.0], [59.4, 1867.0], [59.5, 1869.0], [59.6, 1869.0], [59.7, 1870.0], [59.8, 1870.0], [59.9, 1871.0], [60.0, 1871.0], [60.1, 1871.0], [60.2, 1872.0], [60.3, 1875.0], [60.4, 1875.0], [60.5, 1876.0], [60.6, 1876.0], [60.7, 1877.0], [60.8, 1882.0], [60.9, 1882.0], [61.0, 1883.0], [61.1, 1883.0], [61.2, 1884.0], [61.3, 1884.0], [61.4, 1885.0], [61.5, 1885.0], [61.6, 1885.0], [61.7, 1885.0], [61.8, 1888.0], [61.9, 1888.0], [62.0, 1888.0], [62.1, 1889.0], [62.2, 1889.0], [62.3, 1891.0], [62.4, 1891.0], [62.5, 1891.0], [62.6, 1892.0], [62.7, 1893.0], [62.8, 1893.0], [62.9, 1893.0], [63.0, 1893.0], [63.1, 1893.0], [63.2, 1894.0], [63.3, 1895.0], [63.4, 1896.0], [63.5, 1897.0], [63.6, 1900.0], [63.7, 1900.0], [63.8, 1901.0], [63.9, 1901.0], [64.0, 1902.0], [64.1, 1902.0], [64.2, 1903.0], [64.3, 1904.0], [64.4, 1906.0], [64.5, 1906.0], [64.6, 1906.0], [64.7, 1906.0], [64.8, 1907.0], [64.9, 1908.0], [65.0, 1909.0], [65.1, 1909.0], [65.2, 1910.0], [65.3, 1911.0], [65.4, 1912.0], [65.5, 1913.0], [65.6, 1915.0], [65.7, 1916.0], [65.8, 1920.0], [65.9, 1920.0], [66.0, 1920.0], [66.1, 1920.0], [66.2, 1921.0], [66.3, 1921.0], [66.4, 1924.0], [66.5, 1927.0], [66.6, 1929.0], [66.7, 1929.0], [66.8, 1929.0], [66.9, 1930.0], [67.0, 1930.0], [67.1, 1931.0], [67.2, 1931.0], [67.3, 1932.0], [67.4, 1933.0], [67.5, 1933.0], [67.6, 1934.0], [67.7, 1940.0], [67.8, 1942.0], [67.9, 1943.0], [68.0, 1945.0], [68.1, 1948.0], [68.2, 1950.0], [68.3, 1951.0], [68.4, 1957.0], [68.5, 1959.0], [68.6, 1960.0], [68.7, 1960.0], [68.8, 1962.0], [68.9, 1966.0], [69.0, 1967.0], [69.1, 1969.0], [69.2, 1972.0], [69.3, 1973.0], [69.4, 1973.0], [69.5, 1976.0], [69.6, 1979.0], [69.7, 1984.0], [69.8, 1988.0], [69.9, 1989.0], [70.0, 1990.0], [70.1, 1994.0], [70.2, 1995.0], [70.3, 1995.0], [70.4, 1996.0], [70.5, 1999.0], [70.6, 2000.0], [70.7, 2004.0], [70.8, 2004.0], [70.9, 2005.0], [71.0, 2010.0], [71.1, 2010.0], [71.2, 2013.0], [71.3, 2014.0], [71.4, 2016.0], [71.5, 2016.0], [71.6, 2019.0], [71.7, 2025.0], [71.8, 2026.0], [71.9, 2030.0], [72.0, 2032.0], [72.1, 2032.0], [72.2, 2032.0], [72.3, 2033.0], [72.4, 2033.0], [72.5, 2034.0], [72.6, 2035.0], [72.7, 2037.0], [72.8, 2037.0], [72.9, 2037.0], [73.0, 2038.0], [73.1, 2038.0], [73.2, 2040.0], [73.3, 2040.0], [73.4, 2040.0], [73.5, 2040.0], [73.6, 2041.0], [73.7, 2041.0], [73.8, 2041.0], [73.9, 2041.0], [74.0, 2041.0], [74.1, 2042.0], [74.2, 2043.0], [74.3, 2044.0], [74.4, 2045.0], [74.5, 2046.0], [74.6, 2046.0], [74.7, 2049.0], [74.8, 2053.0], [74.9, 2053.0], [75.0, 2054.0], [75.1, 2054.0], [75.2, 2057.0], [75.3, 2058.0], [75.4, 2061.0], [75.5, 2062.0], [75.6, 2064.0], [75.7, 2065.0], [75.8, 2066.0], [75.9, 2068.0], [76.0, 2068.0], [76.1, 2070.0], [76.2, 2070.0], [76.3, 2070.0], [76.4, 2071.0], [76.5, 2071.0], [76.6, 2072.0], [76.7, 2072.0], [76.8, 2073.0], [76.9, 2073.0], [77.0, 2073.0], [77.1, 2074.0], [77.2, 2074.0], [77.3, 2074.0], [77.4, 2075.0], [77.5, 2075.0], [77.6, 2075.0], [77.7, 2075.0], [77.8, 2075.0], [77.9, 2075.0], [78.0, 2077.0], [78.1, 2078.0], [78.2, 2078.0], [78.3, 2079.0], [78.4, 2079.0], [78.5, 2081.0], [78.6, 2081.0], [78.7, 2082.0], [78.8, 2082.0], [78.9, 2082.0], [79.0, 2083.0], [79.1, 2083.0], [79.2, 2090.0], [79.3, 2090.0], [79.4, 2090.0], [79.5, 2091.0], [79.6, 2091.0], [79.7, 2091.0], [79.8, 2093.0], [79.9, 2094.0], [80.0, 2094.0], [80.1, 2095.0], [80.2, 2095.0], [80.3, 2099.0], [80.4, 2103.0], [80.5, 2117.0], [80.6, 2123.0], [80.7, 2125.0], [80.8, 2131.0], [80.9, 2145.0], [81.0, 2151.0], [81.1, 2152.0], [81.2, 2155.0], [81.3, 2160.0], [81.4, 2160.0], [81.5, 2163.0], [81.6, 2165.0], [81.7, 2170.0], [81.8, 2176.0], [81.9, 2178.0], [82.0, 2180.0], [82.1, 2182.0], [82.2, 2196.0], [82.3, 2196.0], [82.4, 2199.0], [82.5, 2200.0], [82.6, 2201.0], [82.7, 2204.0], [82.8, 2205.0], [82.9, 2212.0], [83.0, 2215.0], [83.1, 2216.0], [83.2, 2220.0], [83.3, 2221.0], [83.4, 2223.0], [83.5, 2224.0], [83.6, 2225.0], [83.7, 2230.0], [83.8, 2231.0], [83.9, 2233.0], [84.0, 2236.0], [84.1, 2246.0], [84.2, 2251.0], [84.3, 2255.0], [84.4, 2257.0], [84.5, 2258.0], [84.6, 2264.0], [84.7, 2265.0], [84.8, 2266.0], [84.9, 2266.0], [85.0, 2275.0], [85.1, 2276.0], [85.2, 2277.0], [85.3, 2278.0], [85.4, 2281.0], [85.5, 2282.0], [85.6, 2283.0], [85.7, 2283.0], [85.8, 2286.0], [85.9, 2287.0], [86.0, 2288.0], [86.1, 2290.0], [86.2, 2291.0], [86.3, 2291.0], [86.4, 2292.0], [86.5, 2292.0], [86.6, 2293.0], [86.7, 2293.0], [86.8, 2293.0], [86.9, 2294.0], [87.0, 2294.0], [87.1, 2297.0], [87.2, 2299.0], [87.3, 2300.0], [87.4, 2301.0], [87.5, 2302.0], [87.6, 2302.0], [87.7, 2304.0], [87.8, 2305.0], [87.9, 2306.0], [88.0, 2307.0], [88.1, 2309.0], [88.2, 2310.0], [88.3, 2310.0], [88.4, 2310.0], [88.5, 2311.0], [88.6, 2312.0], [88.7, 2314.0], [88.8, 2315.0], [88.9, 2315.0], [89.0, 2315.0], [89.1, 2315.0], [89.2, 2316.0], [89.3, 2316.0], [89.4, 2317.0], [89.5, 2318.0], [89.6, 2318.0], [89.7, 2319.0], [89.8, 2321.0], [89.9, 2322.0], [90.0, 2324.0], [90.1, 2324.0], [90.2, 2326.0], [90.3, 2327.0], [90.4, 2329.0], [90.5, 2329.0], [90.6, 2332.0], [90.7, 2332.0], [90.8, 2332.0], [90.9, 2343.0], [91.0, 2344.0], [91.1, 2354.0], [91.2, 2356.0], [91.3, 2366.0], [91.4, 2371.0], [91.5, 2383.0], [91.6, 2400.0], [91.7, 2404.0], [91.8, 2409.0], [91.9, 2411.0], [92.0, 2423.0], [92.1, 2439.0], [92.2, 2440.0], [92.3, 2461.0], [92.4, 2462.0], [92.5, 2467.0], [92.6, 2469.0], [92.7, 2471.0], [92.8, 2476.0], [92.9, 2479.0], [93.0, 2479.0], [93.1, 2480.0], [93.2, 2482.0], [93.3, 2483.0], [93.4, 2484.0], [93.5, 2495.0], [93.6, 2496.0], [93.7, 2496.0], [93.8, 2499.0], [93.9, 2499.0], [94.0, 2506.0], [94.1, 2509.0], [94.2, 2509.0], [94.3, 2509.0], [94.4, 2510.0], [94.5, 2510.0], [94.6, 2513.0], [94.7, 2513.0], [94.8, 2515.0], [94.9, 2515.0], [95.0, 2519.0], [95.1, 2519.0], [95.2, 2520.0], [95.3, 2522.0], [95.4, 2522.0], [95.5, 2523.0], [95.6, 2523.0], [95.7, 2523.0], [95.8, 2525.0], [95.9, 2525.0], [96.0, 2526.0], [96.1, 2528.0], [96.2, 2532.0], [96.3, 2541.0], [96.4, 2585.0], [96.5, 2587.0], [96.6, 2610.0], [96.7, 2622.0], [96.8, 2636.0], [96.9, 2640.0], [97.0, 2644.0], [97.1, 2656.0], [97.2, 2682.0], [97.3, 2686.0], [97.4, 2686.0], [97.5, 2688.0], [97.6, 2693.0], [97.7, 2695.0], [97.8, 2698.0], [97.9, 2700.0], [98.0, 2706.0], [98.1, 2707.0], [98.2, 2723.0], [98.3, 2724.0], [98.4, 2725.0], [98.5, 2729.0], [98.6, 2742.0], [98.7, 2742.0], [98.8, 2755.0], [98.9, 2789.0], [99.0, 2870.0], [99.1, 2888.0], [99.2, 2891.0], [99.3, 3024.0], [99.4, 3031.0], [99.5, 3077.0], [99.6, 3078.0], [99.7, 3090.0], [99.8, 3387.0], [99.9, 3555.0]], "isOverall": false, "label": "HTTP 요청 (수강 신청)", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 150.0, "series": [{"data": [[0.0, 6.0], [600.0, 22.0], [700.0, 13.0], [800.0, 11.0], [900.0, 9.0], [1000.0, 13.0], [1100.0, 33.0], [1200.0, 98.0], [1300.0, 127.0], [1400.0, 109.0], [1500.0, 134.0], [100.0, 6.0], [1600.0, 99.0], [1700.0, 92.0], [1800.0, 52.0], [1900.0, 39.0], [2000.0, 23.0], [2100.0, 14.0], [2200.0, 8.0], [2300.0, 5.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 2.0], [200.0, 29.0], [300.0, 14.0], [400.0, 33.0], [500.0, 7.0]], "isOverall": false, "label": "HTTP 요청 (사용자 조회)", "isController": false}, {"data": [[2100.0, 1.0], [2200.0, 3.0], [2300.0, 1.0], [600.0, 42.0], [700.0, 36.0], [800.0, 44.0], [900.0, 94.0], [1000.0, 68.0], [1100.0, 18.0], [1200.0, 70.0], [1300.0, 85.0], [1400.0, 150.0], [1500.0, 80.0], [1600.0, 85.0], [1700.0, 150.0], [1800.0, 14.0], [1900.0, 24.0], [500.0, 20.0], [2000.0, 15.0]], "isOverall": false, "label": "HTTP 요청 (사용자 로그인)", "isController": false}, {"data": [[600.0, 3.0], [700.0, 3.0], [800.0, 3.0], [1100.0, 19.0], [1200.0, 50.0], [1300.0, 88.0], [1400.0, 82.0], [1500.0, 87.0], [100.0, 2.0], [1600.0, 91.0], [1700.0, 92.0], [1800.0, 85.0], [1900.0, 70.0], [2000.0, 98.0], [2100.0, 22.0], [2200.0, 48.0], [2300.0, 43.0], [2400.0, 24.0], [2500.0, 26.0], [2600.0, 13.0], [2700.0, 11.0], [2800.0, 3.0], [3000.0, 5.0], [200.0, 2.0], [3300.0, 1.0], [3500.0, 1.0], [300.0, 13.0], [400.0, 12.0], [500.0, 3.0]], "isOverall": false, "label": "HTTP 요청 (수강 신청)", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 117.0, "minX": 0.0, "ticks": [[0, "요청 수 \n(응답시간 <= 500ms)"], [1, "요청 수 \n(응답시간 > 500ms 및 <= 1,500ms)"], [2, "요청 수 \n(응답시간 > 1,500ms)"], [3, "오류 발생 요청"]], "maxY": 1560.0, "series": [{"data": [[0.0, 117.0]], "color": "#9ACD32", "isOverall": false, "label": "요청 수 \n(응답시간 <= 500ms)", "isController": false}, {"data": [[1.0, 1323.0]], "color": "yellow", "isOverall": false, "label": "요청 수 \n(응답시간 > 500ms 및 <= 1,500ms)", "isController": false}, {"data": [[2.0, 1560.0]], "color": "orange", "isOverall": false, "label": "요청 수 \n(응답시간 > 1,500ms)", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "오류 발생 요청", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 796.3890000000004, "minX": 1.73841984E12, "maxY": 796.3890000000004, "series": [{"data": [[1.73841984E12, 796.3890000000004]], "isOverall": false, "label": "수강 신청 테스트 (1000명)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73841984E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 185.0, "minX": 1.0, "maxY": 3555.0, "series": [{"data": [[328.0, 2519.0], [410.0, 2707.0], [484.0, 2621.0], [501.0, 2344.0], [524.0, 2296.0], [574.0, 2054.5], [554.0, 1760.0], [552.0, 2354.0], [595.0, 2025.0], [584.0, 2160.0], [629.0, 1886.5], [627.0, 2097.0], [663.0, 1878.5], [660.0, 1745.0], [654.0, 1698.5], [697.0, 1659.0], [696.0, 1587.5], [691.0, 1812.0], [690.0, 1393.0], [689.0, 1690.0], [688.0, 1755.5], [678.0, 1855.0], [677.0, 1727.0], [735.0, 1602.0], [731.0, 1737.0], [730.0, 1449.0], [714.0, 1874.5], [713.0, 1549.4166666666667], [766.0, 1579.0], [767.0, 1446.75], [765.0, 1702.0], [764.0, 1296.0], [763.0, 1580.0], [742.0, 1730.0], [741.0, 1597.0], [738.0, 1421.0], [736.0, 1865.0], [748.0, 1721.0], [746.0, 1788.0], [745.0, 1320.0], [759.0, 1707.0], [756.0, 1453.0], [755.0, 1457.0], [753.0, 1461.0], [797.0, 1455.1249999999998], [798.0, 1400.3333333333333], [784.0, 1706.0], [796.0, 1496.5], [795.0, 1252.0], [793.0, 1565.0], [792.0, 1436.6666666666667], [783.0, 1440.5], [773.0, 1446.3333333333333], [779.0, 1568.0], [778.0, 1169.0], [791.0, 1499.1666666666665], [789.0, 1459.5], [788.0, 1563.0], [786.0, 1435.5], [819.0, 1446.0], [828.0, 1272.3333333333333], [825.0, 1608.5], [824.0, 1295.2], [807.0, 1301.5], [805.0, 1433.3333333333333], [804.0, 1439.0], [801.0, 1423.1249999999998], [815.0, 1440.5], [814.0, 1520.75], [813.0, 1716.8333333333333], [812.0, 1494.5], [811.0, 1563.0], [810.0, 1561.0], [809.0, 1495.5], [808.0, 1436.0], [823.0, 1402.0], [821.0, 1283.0], [820.0, 1412.0], [818.0, 1478.0], [816.0, 1415.0], [849.0, 1363.6], [861.0, 1396.0], [859.0, 1334.5], [858.0, 1376.6363636363637], [857.0, 1828.5], [839.0, 1269.6666666666667], [838.0, 1353.3333333333333], [837.0, 1386.5], [836.0, 1335.0], [835.0, 1397.3333333333333], [832.0, 1449.3333333333333], [855.0, 1391.0], [851.0, 1312.0], [850.0, 1461.857142857143], [848.0, 1368.4333333333338], [888.0, 1474.0], [883.0, 1408.4166666666667], [895.0, 1362.3333333333333], [894.0, 1452.0], [889.0, 1622.0], [879.0, 1427.5], [865.0, 1504.0], [869.0, 1746.0], [868.0, 1399.0], [871.0, 1388.5], [870.0, 1550.5], [878.0, 1261.0], [877.0, 1629.0], [876.0, 1373.0], [875.0, 1411.5], [873.0, 1630.0], [872.0, 1549.6666666666667], [886.0, 1518.0], [885.0, 1307.0], [884.0, 1408.5], [882.0, 1791.5], [881.0, 1391.916666666667], [921.0, 1386.0], [926.0, 1390.4], [920.0, 1358.25], [902.0, 1604.8], [901.0, 1519.2], [900.0, 1624.3000000000002], [899.0, 1624.0], [898.0, 1353.2], [918.0, 1515.6666666666667], [916.0, 1474.5], [914.0, 1495.0], [912.0, 1513.0], [911.0, 1717.6], [910.0, 1454.0], [909.0, 1579.0], [908.0, 1527.6666666666667], [906.0, 1449.1666666666665], [905.0, 1392.5], [904.0, 1364.857142857143], [958.0, 1747.75], [959.0, 1721.0], [947.0, 1459.5500000000004], [946.0, 2367.0], [957.0, 1541.0], [956.0, 1569.875], [955.0, 1899.5], [953.0, 1438.888888888889], [937.0, 1441.3333333333333], [934.0, 1399.7142857142858], [933.0, 1507.4545454545453], [932.0, 1381.0], [931.0, 1625.5], [930.0, 1486.5], [929.0, 1846.7142857142858], [936.0, 1577.0], [951.0, 1437.5], [950.0, 1609.6666666666667], [949.0, 1343.0], [948.0, 1489.0], [988.0, 454.0], [991.0, 892.8571428571428], [976.0, 1382.0], [978.0, 1544.082474226804], [977.0, 1693.6], [980.0, 1602.0], [979.0, 1750.7777777777776], [990.0, 954.6], [989.0, 1335.9642857142858], [987.0, 779.7142857142857], [986.0, 1288.9333333333332], [985.0, 1235.8333333333335], [984.0, 1300.0666666666664], [975.0, 1542.4], [961.0, 1567.5], [960.0, 1570.5555555555557], [963.0, 1948.0], [962.0, 1377.0], [966.0, 1961.0], [964.0, 1759.0], [974.0, 1768.5], [973.0, 1639.2666666666664], [972.0, 1539.5], [971.0, 1555.5], [970.0, 1575.5], [969.0, 1530.0], [968.0, 1533.0], [982.0, 1437.2857142857144], [981.0, 1615.034482758621], [1000.0, 729.1111111111112], [999.0, 185.0], [998.0, 699.2631578947369], [996.0, 216.5], [995.0, 641.913043478261], [994.0, 1108.4], [993.0, 843.1428571428572]], "isOverall": false, "label": "HTTP 요청 (사용자 조회)", "isController": false}, {"data": [[913.8930000000005, 1400.299999999999]], "isOverall": false, "label": "HTTP 요청 (사용자 조회)-Aggregated", "isController": false}, {"data": [[729.0, 631.2222222222223], [730.0, 573.0], [741.0, 733.0], [745.0, 664.3846153846155], [761.0, 654.6521739130435], [775.0, 621.0], [776.0, 657.6], [789.0, 761.0], [792.0, 667.3333333333334], [803.0, 685.3333333333334], [804.0, 708.0], [822.0, 663.3333333333333], [831.0, 606.5], [838.0, 819.0], [852.0, 564.0], [853.0, 662.5], [867.0, 678.0], [868.0, 599.0], [883.0, 757.0], [899.0, 818.5], [916.0, 770.0], [932.0, 831.25], [948.0, 852.5], [988.0, 1714.0], [963.0, 840.6666666666666], [965.0, 2208.0], [975.0, 2157.0], [991.0, 1642.6363636363637], [979.0, 2008.8], [978.0, 2028.3333333333335], [981.0, 1912.2307692307693], [980.0, 1976.5], [983.0, 1832.25], [982.0, 1792.8461538461538], [990.0, 1672.9375], [989.0, 1674.0972222222224], [987.0, 1722.16], [986.0, 1731.3783783783786], [985.0, 1778.2941176470586], [984.0, 1805.304347826087], [994.0, 1099.75], [992.0, 1456.25], [998.0, 1439.170212765957], [1000.0, 1153.077519379845], [999.0, 1475.3636363636363], [997.0, 1358.0], [996.0, 1496.3333333333333], [995.0, 1579.8214285714284], [993.0, 1663.875]], "isOverall": false, "label": "HTTP 요청 (사용자 로그인)", "isController": false}, {"data": [[973.5980000000002, 1347.028]], "isOverall": false, "label": "HTTP 요청 (사용자 로그인)-Aggregated", "isController": false}, {"data": [[2.0, 1929.0], [3.0, 1251.0], [4.0, 2212.0], [5.0, 3555.0], [8.0, 2471.6666666666665], [9.0, 2356.0], [11.0, 2470.0], [12.0, 2423.0], [13.0, 2409.0], [14.0, 2462.0], [16.0, 2453.0], [18.0, 2589.0], [19.0, 2476.0], [20.0, 2479.0], [21.0, 2484.0], [22.0, 1528.0], [23.0, 2695.0], [24.0, 2480.0], [25.0, 2479.0], [26.0, 1647.0], [27.0, 2483.0], [30.0, 1629.3333333333333], [31.0, 3078.0], [32.0, 1967.0], [35.0, 2742.0], [34.0, 2113.5], [37.0, 2463.5], [39.0, 2513.0], [38.0, 1934.0], [41.0, 1960.0], [40.0, 2033.0], [43.0, 2723.0], [42.0, 2528.0], [45.0, 3090.0], [44.0, 2117.0], [46.0, 2072.0], [49.0, 2725.0], [48.0, 2290.5], [53.0, 2094.0], [52.0, 2237.6666666666665], [55.0, 2082.0], [54.0, 2216.0], [57.0, 2110.5], [58.0, 2077.0], [78.0, 2204.0], [87.0, 2404.285714285715], [91.0, 2276.0], [90.0, 2283.0], [89.0, 2286.0], [88.0, 3031.0], [95.0, 2292.0], [94.0, 1669.5], [92.0, 2515.0], [99.0, 2294.0], [98.0, 2293.0], [97.0, 1957.0], [103.0, 2300.0], [102.0, 1873.0], [100.0, 2292.0], [107.0, 2495.5], [105.0, 2297.0], [104.0, 2700.0], [111.0, 1696.5], [109.0, 2287.0], [108.0, 2291.0], [115.0, 2688.0], [114.0, 1764.0], [113.0, 2301.0], [112.0, 2306.0], [119.0, 1877.0], [118.0, 2314.0], [117.0, 1876.0], [116.0, 2532.0], [123.0, 2319.0], [122.0, 2522.0], [121.0, 2316.0], [120.0, 2525.0], [127.0, 2603.0], [125.0, 2519.0], [124.0, 2891.0], [134.0, 1948.0], [133.0, 2310.0], [132.0, 1897.0], [131.0, 2309.0], [130.0, 2523.0], [129.0, 1902.0], [128.0, 1907.0], [143.0, 2857.6666666666665], [140.0, 2311.0], [139.0, 2338.0], [137.0, 2312.0], [136.0, 2310.0], [151.0, 2259.0], [149.0, 2326.0], [148.0, 2010.0], [147.0, 2315.0], [146.0, 2013.0], [145.0, 2310.0], [144.0, 2315.0], [158.0, 2329.0], [157.0, 2509.0], [156.0, 2049.0], [155.0, 2040.0], [154.0, 2042.0], [152.0, 2496.0], [167.0, 2329.0], [166.0, 2053.0], [165.0, 2057.0], [164.0, 2041.0], [163.0, 2332.0], [162.0, 2327.0], [161.0, 2324.0], [160.0, 2332.0], [175.0, 2075.0], [174.0, 2322.0], [173.0, 2644.0], [172.0, 2496.0], [171.0, 2061.0], [170.0, 2053.0], [169.0, 2317.0], [168.0, 2321.0], [182.0, 2302.0], [181.0, 2307.0], [180.0, 2355.0], [178.0, 2075.0], [177.0, 2193.0], [191.0, 2469.0], [190.0, 2278.0], [189.0, 2281.0], [188.0, 2283.0], [187.0, 2482.0], [186.0, 2290.0], [185.0, 2291.0], [184.0, 2178.5], [199.0, 2411.0], [198.0, 2587.0], [197.0, 2026.0], [196.0, 2032.0], [195.0, 2040.0], [194.0, 2041.0], [193.0, 2257.0], [192.0, 2264.0], [207.0, 1969.0], [206.0, 2179.5], [204.0, 2233.0], [203.0, 1246.0], [202.0, 2400.0], [201.0, 2004.0], [200.0, 2205.0], [215.0, 1951.0], [214.0, 1966.0], [213.0, 1962.0], [212.0, 2724.0], [211.0, 1959.0], [210.0, 2201.0], [209.0, 2366.0], [208.0, 2755.0], [222.0, 1506.0], [221.0, 1945.0], [220.0, 1943.0], [219.0, 1931.0], [218.0, 2318.0], [217.0, 2170.0], [216.0, 1466.0], [239.0, 2081.0], [238.0, 1882.0], [237.0, 2258.0], [236.0, 2091.0], [235.0, 2094.0], [234.0, 2266.0], [233.0, 2461.0], [232.0, 2028.7], [247.0, 1862.0], [246.0, 1867.0], [245.0, 1866.0], [244.0, 1871.0], [243.0, 2231.0], [242.0, 2066.0], [241.0, 2072.0], [240.0, 1875.0], [255.0, 2041.0], [254.0, 1858.0], [253.0, 1858.0], [252.0, 2045.0], [251.0, 2054.0], [250.0, 2033.0], [249.0, 2044.0], [248.0, 1871.0], [270.0, 2176.0], [271.0, 1853.0], [269.0, 2032.0], [268.0, 1604.0], [267.0, 2371.0], [266.0, 2043.0], [265.0, 2040.0], [264.0, 2182.0], [263.0, 2035.0], [257.0, 2041.0], [256.0, 2200.0], [259.0, 2037.0], [258.0, 2037.0], [262.0, 1864.0], [261.0, 2038.0], [260.0, 1579.0], [286.0, 1812.0], [287.0, 1809.0], [285.0, 2324.0], [284.0, 1814.0], [283.0, 2010.0], [282.0, 2155.0], [281.0, 2014.0], [280.0, 1823.0], [279.0, 1832.0], [273.0, 2030.0], [272.0, 1846.0], [275.0, 2025.0], [274.0, 2585.0], [278.0, 2254.5], [276.0, 2742.0], [302.0, 2151.0], [303.0, 1819.0], [301.0, 1773.0], [300.0, 2163.0], [299.0, 1877.5], [297.0, 1988.0], [296.0, 1784.5], [294.0, 1786.0], [289.0, 1791.0], [291.0, 1995.0], [290.0, 1995.0], [293.0, 1989.0], [292.0, 1791.0], [318.0, 1783.0], [319.0, 1942.0], [317.0, 1785.0], [316.0, 1786.0], [315.0, 1790.0], [314.0, 2051.0], [312.0, 1960.0], [311.0, 1566.0], [305.0, 1816.0], [304.0, 1973.0], [307.0, 2160.0], [306.0, 1815.0], [310.0, 2343.0], [309.0, 1565.0], [308.0, 1813.0], [334.0, 1767.5], [335.0, 1929.0], [332.0, 1774.0], [323.0, 2145.0], [322.0, 1676.5], [320.0, 1940.0], [331.0, 2031.0], [329.0, 1933.0], [328.0, 1765.0], [327.0, 2523.0], [326.0, 1930.0], [325.0, 1770.0], [324.0, 1930.0], [349.0, 2099.0], [351.0, 1998.0], [348.0, 1920.0], [339.0, 2509.0], [338.0, 1927.0], [337.0, 2302.0], [336.0, 1932.0], [347.0, 1913.0], [346.0, 1916.0], [345.0, 2622.0], [344.0, 1920.0], [343.0, 1748.0], [342.0, 1755.0], [341.0, 1756.0], [340.0, 1920.0], [366.0, 1817.0], [367.0, 2282.0], [364.0, 2080.5], [355.0, 1909.0], [354.0, 1908.0], [353.0, 2093.0], [362.0, 1742.0], [361.0, 1893.0], [360.0, 1743.0], [359.0, 1900.0], [358.0, 2083.0], [357.0, 1743.0], [356.0, 1906.0], [376.0, 2074.0], [381.0, 2024.0], [371.0, 1891.0], [370.0, 1884.0], [369.0, 1563.0], [368.0, 1891.0], [379.0, 1888.0], [378.0, 1884.0], [377.0, 1742.0], [375.0, 2075.0], [374.0, 1746.0], [373.0, 1739.0], [372.0, 2079.0], [396.0, 1738.0], [414.0, 1902.0], [415.0, 1911.0], [413.0, 1705.0], [412.0, 2079.0], [411.0, 2074.0], [410.0, 1706.0], [409.0, 2440.0], [408.0, 2294.0], [407.0, 1893.6000000000001], [430.0, 1698.0], [431.0, 1893.0], [429.0, 1894.0], [428.0, 1699.0], [427.0, 2073.0], [426.0, 1697.0], [425.0, 1694.0], [424.0, 2075.0], [423.0, 1704.0], [417.0, 1900.0], [416.0, 1896.0], [419.0, 2081.0], [418.0, 1700.0], [422.0, 1906.0], [421.0, 1989.0], [446.0, 2075.0], [447.0, 2404.0], [445.0, 1699.5], [435.0, 1883.0], [434.0, 2075.0], [433.0, 1697.0], [432.0, 1697.0], [443.0, 1696.0], [442.0, 2070.0], [441.0, 1692.0], [440.0, 1685.0], [439.0, 2071.0], [438.0, 1689.0], [437.0, 1881.5], [462.0, 1859.0], [463.0, 1860.0], [461.0, 1674.0], [460.0, 1678.0], [459.0, 1674.0], [458.0, 1870.0], [457.0, 1870.0], [456.0, 1964.5], [455.0, 2266.0], [449.0, 1876.0], [448.0, 1688.0], [451.0, 1685.0], [450.0, 1872.0], [453.0, 1871.0], [452.0, 1869.0], [478.0, 1879.5], [479.0, 1830.0], [476.0, 2354.0], [467.0, 1671.0], [466.0, 1671.0], [465.0, 1669.0], [464.0, 2073.0], [475.0, 2091.0], [474.0, 1671.0], [473.0, 1528.0], [472.0, 1760.5], [470.0, 1668.0], [469.0, 1669.0], [468.0, 1668.0], [493.0, 2068.0], [494.0, 1857.0], [492.0, 1858.0], [483.0, 1814.0], [482.0, 1819.0], [481.0, 1824.0], [480.0, 2236.0], [491.0, 1661.0], [490.0, 1968.5], [488.0, 1664.0], [487.0, 1869.0], [486.0, 1864.0], [485.0, 1667.0], [484.0, 1875.0], [510.0, 1749.0], [511.0, 1835.0], [508.0, 1665.0], [499.0, 1660.0], [498.0, 2068.0], [497.0, 1658.0], [496.0, 1574.5], [507.0, 1666.0], [506.0, 1671.0], [505.0, 1460.0], [504.0, 1852.0], [503.0, 1675.0], [502.0, 2729.0], [501.0, 1675.0], [500.0, 1468.0], [536.0, 1585.0], [542.0, 1765.0], [543.0, 1577.0], [528.0, 1611.0], [530.0, 2000.0], [529.0, 1607.0], [541.0, 1782.0], [539.0, 1767.0], [537.0, 1772.0], [527.0, 1613.0], [512.0, 2178.0], [516.0, 1657.0], [515.0, 1649.0], [519.0, 1941.5], [518.0, 1836.0], [526.0, 1614.0], [525.0, 1811.0], [524.0, 2016.0], [523.0, 1815.0], [522.0, 1442.0], [521.0, 2032.0], [520.0, 2160.0], [535.0, 1788.5], [533.0, 1783.0], [532.0, 1781.0], [531.0, 2005.0], [558.0, 1815.5], [575.0, 1757.0], [574.0, 1739.2], [551.0, 1757.0], [550.0, 1755.0], [549.0, 1564.0], [548.0, 2246.0], [547.0, 1750.0], [546.0, 1567.0], [545.0, 1569.0], [544.0, 1972.0], [567.0, 1774.0], [556.0, 1559.0], [555.0, 1564.0], [554.0, 1773.0], [553.0, 1957.0], [552.0, 2090.0], [600.0, 1523.0], [605.0, 1732.0], [607.0, 1686.5], [593.0, 1530.0], [592.0, 1740.0], [595.0, 1531.0], [594.0, 1731.0], [604.0, 1725.0], [602.0, 1521.0], [601.0, 1727.0], [591.0, 1734.0], [576.0, 1335.0], [578.0, 1903.0], [577.0, 1762.0], [581.0, 1543.5], [579.0, 1485.0], [583.0, 1892.0], [582.0, 1330.0], [590.0, 1530.0], [589.0, 1526.0], [588.0, 1742.0], [587.0, 1882.0], [586.0, 1635.0], [584.0, 1885.0], [599.0, 1724.0], [598.0, 1732.0], [597.0, 1730.0], [596.0, 1332.0], [633.0, 1675.0], [638.0, 1800.0], [639.0, 1670.0], [625.0, 1489.0], [624.0, 1489.0], [627.0, 1691.0], [626.0, 1483.0], [629.0, 1288.0], [628.0, 1685.0], [637.0, 1668.0], [636.0, 1570.0], [634.0, 1474.0], [632.0, 1675.0], [615.0, 1715.0], [614.0, 1713.0], [613.0, 1507.0], [612.0, 1508.0], [611.0, 1784.0], [609.0, 1722.0], [608.0, 1726.0], [623.0, 1698.0], [622.0, 1491.0], [621.0, 1495.0], [620.0, 1503.0], [619.0, 1318.0], [618.0, 1519.0], [617.0, 1842.0], [616.0, 1499.0], [631.0, 1476.0], [630.0, 1680.0], [668.0, 1622.0], [671.0, 1469.0], [657.0, 1758.0], [656.0, 1632.0], [659.0, 1469.0], [658.0, 1234.0], [661.0, 1482.0], [660.0, 1633.0], [670.0, 1707.0], [669.0, 1471.0], [667.0, 1624.0], [666.0, 1481.0], [665.0, 1485.0], [664.0, 1627.0], [655.0, 1634.0], [642.0, 1933.0], [641.0, 885.5], [646.0, 1591.0], [643.0, 1464.0], [654.0, 1768.0], [653.0, 1640.0], [652.0, 1554.0], [650.0, 1559.5], [648.0, 1559.0], [663.0, 477.0], [662.0, 1623.0], [697.0, 1513.0], [692.0, 1529.0], [696.0, 1516.0], [679.0, 1434.0], [678.0, 1587.0], [677.0, 1742.0], [676.0, 1597.0], [675.0, 2004.0], [674.0, 1459.0], [673.0, 1612.0], [672.0, 1607.0], [687.0, 1545.0], [686.0, 1556.0], [685.0, 1206.0], [684.0, 1417.0], [683.0, 1562.0], [682.0, 1563.0], [681.0, 816.5], [695.0, 1396.0], [694.0, 1398.0], [693.0, 1807.0], [691.0, 1400.0], [690.0, 1686.0], [689.0, 1405.0], [688.0, 1403.0], [734.0, 1328.0], [735.0, 1611.0], [720.0, 1473.0], [723.0, 1341.0], [722.0, 1469.0], [725.0, 1618.0], [724.0, 1199.0], [733.0, 1333.0], [732.0, 1443.0], [731.0, 1336.0], [730.0, 1329.0], [729.0, 1321.0], [719.0, 1479.0], [718.0, 1739.0], [716.0, 1351.0], [715.0, 1495.0], [714.0, 1368.0], [713.0, 1498.375], [727.0, 1341.0], [726.0, 1191.0], [761.0, 1297.0], [766.0, 1296.0], [767.0, 1302.0], [753.0, 1308.0], [752.0, 1591.0], [756.0, 1307.0], [755.0, 1236.5], [765.0, 1304.0], [764.0, 1584.0], [763.0, 1374.0], [760.0, 1453.0], [743.0, 1327.0], [742.0, 1473.0], [741.0, 1329.0], [740.0, 1327.0], [739.0, 1420.0], [738.0, 1609.0], [737.0, 1610.0], [736.0, 1187.0], [751.0, 1311.0], [750.0, 1470.0], [749.0, 1313.0], [748.0, 1854.0], [747.0, 1472.0], [746.0, 1324.0], [745.0, 1253.0], [759.0, 1748.0], [757.0, 1711.0], [796.0, 1313.0], [799.0, 1448.0], [785.0, 1446.0], [784.0, 1300.0], [787.0, 1283.0], [786.0, 1445.0], [789.0, 1443.0], [788.0, 1284.0], [798.0, 1448.0], [797.0, 1315.0], [795.0, 1314.0], [794.0, 1690.0], [793.0, 1255.0], [792.0, 1261.0], [783.0, 1302.0], [769.0, 1376.0], [773.0, 1303.0], [772.0, 1444.3333333333333], [775.0, 1448.0], [774.0, 1304.0], [782.0, 1306.0], [781.0, 1301.0], [780.0, 1307.0], [779.0, 1309.0], [778.0, 1173.0], [777.0, 1239.0], [791.0, 1160.0], [790.0, 1271.0], [825.0, 1681.0], [829.0, 1530.0], [830.0, 1153.0], [817.0, 1552.0], [816.0, 1419.0], [819.0, 1415.0], [818.0, 1555.0], [821.0, 1424.0], [820.0, 1410.0], [828.0, 1901.0], [827.0, 1150.0], [826.0, 1285.0], [824.0, 1291.0], [807.0, 1307.0], [806.0, 1315.0], [805.0, 1445.0], [804.0, 1313.0], [803.0, 1445.0], [802.0, 309.0], [801.0, 2058.0], [800.0, 1445.0], [815.0, 1429.0], [814.0, 1563.0], [813.0, 1302.0], [812.0, 1568.0], [811.0, 1162.0], [810.0, 1303.0], [809.0, 1307.0], [808.0, 1308.0], [823.0, 1283.0], [822.0, 1117.0], [861.0, 1404.0], [863.0, 1502.0], [849.0, 1275.0], [848.0, 1338.0], [851.0, 1280.0], [850.0, 1910.0], [853.0, 1272.0], [852.0, 853.0], [860.0, 1611.0], [859.0, 1407.0], [858.0, 1274.0], [857.0, 1399.0], [856.0, 1272.0], [839.0, 1406.0], [838.0, 1285.0], [837.0, 1286.0], [836.0, 1282.0], [835.0, 2046.0], [834.0, 1338.5], [832.0, 1469.0], [855.0, 1273.0], [854.0, 1272.0], [894.0, 1514.0], [884.0, 1429.0], [895.0, 1973.0], [881.0, 968.0], [883.0, 428.0], [882.0, 1268.0], [893.0, 1428.75], [889.0, 1276.0], [888.0, 1275.0], [871.0, 1280.0], [870.0, 1278.0], [869.0, 1408.0], [868.0, 1929.0], [867.0, 1407.0], [866.0, 2095.0], [865.0, 1407.0], [864.0, 1265.0], [879.0, 1267.0], [878.0, 1366.0], [877.0, 1270.0], [876.0, 1134.0], [875.0, 1381.0], [874.0, 1275.0], [873.0, 850.0], [872.0, 1274.0], [887.0, 265.0], [886.0, 1458.0], [885.0, 1457.0], [920.0, 1071.5], [924.0, 1389.0], [927.0, 1394.0], [913.0, 1689.0], [912.0, 1156.0], [915.0, 1372.0], [914.0, 1362.0], [926.0, 1700.0], [925.0, 1645.0], [923.0, 1649.0], [922.0, 1394.0], [921.0, 1517.0], [911.0, 1351.0], [896.0, 1498.0], [898.0, 1783.0], [897.0, 1151.0], [900.0, 1772.0], [899.0, 1506.0], [902.0, 1514.0], [901.0, 1246.0], [910.0, 1680.0], [909.0, 1332.0], [908.0, 1307.0], [907.0, 1304.0], [906.0, 1291.0], [905.0, 301.0], [904.0, 1515.5], [918.0, 1683.5], [916.0, 1501.0], [953.0, 603.0], [958.0, 312.0], [959.0, 1557.0], [947.0, 1395.6], [949.0, 1486.0], [948.0, 185.0], [957.0, 313.0], [956.0, 1547.0], [955.0, 1452.0], [952.0, 1372.0], [935.0, 1725.0], [934.0, 1223.0], [933.0, 1556.0], [932.0, 1387.0], [931.0, 341.0], [930.0, 478.0], [929.0, 1393.0], [928.0, 1114.0], [937.0, 1558.0], [936.0, 1562.0], [951.0, 1372.0], [950.0, 1540.0], [988.0, 457.0], [991.0, 726.0], [977.0, 1391.0], [976.0, 1396.0], [979.0, 510.0], [978.0, 1386.0], [981.0, 354.0], [980.0, 336.0], [990.0, 476.0], [989.0, 459.0], [987.0, 460.0], [986.0, 633.0], [985.0, 639.0], [984.0, 354.0], [975.0, 1395.0], [961.0, 1552.0], [960.0, 1578.0], [963.0, 1553.0], [962.0, 1554.0], [965.0, 1363.0], [964.0, 1371.0], [967.0, 1357.0], [966.0, 1360.0], [974.0, 1395.0], [973.0, 1376.0], [972.0, 1384.0], [971.0, 1335.0], [970.0, 1344.0], [969.0, 1348.0], [968.0, 1352.0], [983.0, 357.0], [982.0, 358.0], [1000.0, 302.0], [999.0, 350.0], [998.0, 462.0], [997.0, 465.0], [996.0, 480.0], [995.0, 278.0], [994.0, 505.0], [993.0, 743.0], [992.0, 739.0], [1.0, 2215.0]], "isOverall": false, "label": "HTTP 요청 (수강 신청)", "isController": false}, {"data": [[501.67599999999953, 1759.0439999999987]], "isOverall": false, "label": "HTTP 요청 (수강 신청)-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 18115.333333333332, "minX": 1.73841984E12, "maxY": 27263.15, "series": [{"data": [[1.73841984E12, 27263.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73841984E12, 18115.333333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73841984E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1347.028, "minX": 1.73841984E12, "maxY": 1759.0439999999987, "series": [{"data": [[1.73841984E12, 1400.299999999999]], "isOverall": false, "label": "HTTP 요청 (사용자 조회)", "isController": false}, {"data": [[1.73841984E12, 1347.028]], "isOverall": false, "label": "HTTP 요청 (사용자 로그인)", "isController": false}, {"data": [[1.73841984E12, 1759.0439999999987]], "isOverall": false, "label": "HTTP 요청 (수강 신청)", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73841984E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1347.0250000000003, "minX": 1.73841984E12, "maxY": 1758.9719999999986, "series": [{"data": [[1.73841984E12, 1400.0550000000014]], "isOverall": false, "label": "HTTP 요청 (사용자 조회)", "isController": false}, {"data": [[1.73841984E12, 1347.0250000000003]], "isOverall": false, "label": "HTTP 요청 (사용자 로그인)", "isController": false}, {"data": [[1.73841984E12, 1758.9719999999986]], "isOverall": false, "label": "HTTP 요청 (수강 신청)", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73841984E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73841984E12, "maxY": 0.8219999999999993, "series": [{"data": [[1.73841984E12, 0.0]], "isOverall": false, "label": "HTTP 요청 (사용자 조회)", "isController": false}, {"data": [[1.73841984E12, 0.8219999999999993]], "isOverall": false, "label": "HTTP 요청 (사용자 로그인)", "isController": false}, {"data": [[1.73841984E12, 0.0]], "isOverall": false, "label": "HTTP 요청 (수강 신청)", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73841984E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6.0, "minX": 1.73841984E12, "maxY": 3555.0, "series": [{"data": [[1.73841984E12, 3555.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73841984E12, 2045.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73841984E12, 2681.7399999999943]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73841984E12, 2289.8999999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.73841984E12, 6.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73841984E12, 1514.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73841984E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 656.5, "minX": 90.0, "maxY": 2292.5, "series": [{"data": [[348.0, 1875.0], [90.0, 656.5], [711.0, 1501.0], [737.0, 1589.0], [435.0, 1019.0], [445.0, 1464.0], [234.0, 2292.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 737.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 656.5, "minX": 90.0, "maxY": 2292.5, "series": [{"data": [[348.0, 1874.5], [90.0, 656.5], [711.0, 1501.0], [737.0, 1588.0], [435.0, 1019.0], [445.0, 1463.0], [234.0, 2292.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 737.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.73841984E12, "maxY": 50.0, "series": [{"data": [[1.73841984E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73841984E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.73841984E12, "maxY": 50.0, "series": [{"data": [[1.73841984E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73841984E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.73841984E12, "maxY": 16.666666666666668, "series": [{"data": [[1.73841984E12, 16.666666666666668]], "isOverall": false, "label": "HTTP 요청 (사용자 로그인)-success", "isController": false}, {"data": [[1.73841984E12, 16.666666666666668]], "isOverall": false, "label": "HTTP 요청 (사용자 조회)-success", "isController": false}, {"data": [[1.73841984E12, 16.666666666666668]], "isOverall": false, "label": "HTTP 요청 (수강 신청)-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73841984E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.73841984E12, "maxY": 50.0, "series": [{"data": [[1.73841984E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73841984E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 32400000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

